/*---POSTCODES---*/
UPDATE KONTAKTDB.DBO.InterpreterCenters
SET InterpreterCenters.Postcode_Id = NULL--SELECT *
FROM KONTAKTDB.DBO.InterpreterCenters
JOIN KONTAKTDB.DBO.Postcodes ON Postcodes.Id = InterpreterCenters.Postcode_Id
UPDATE KONTAKTDB.DBO.SinoszUsers
SET SinoszUsers.Postcode_Id = NULL--SELECT *
FROM KONTAKTDB.DBO.SinoszUsers
JOIN KONTAKTDB.DBO.Postcodes ON Postcodes.Id = SinoszUsers.Postcode_Id
UPDATE KONTAKTDB.DBO.Organizations
SET Organizations.Postcode_Id = NULL--SELECT *
FROM KONTAKTDB.DBO.Organizations
JOIN KONTAKTDB.DBO.Postcodes ON Postcodes.Id = Organizations.Postcode_Id
DELETE KONTAKTDB.DBO.Postcodes--SELECT *
FROM KONTAKTDB.DBO.Postcodes
WHERE Postcodes.Code = '1111' AND Postcodes.City = 'Budapest'

--SAJNA A POSTAI ANYAG SEM TÖKÉLETES
DELETE KONTAKTDB.DBO.POSTCODES --SELECT *
FROM KONTAKTDB.DBO.POSTCODES
WHERE ID NOT IN 
	(SELECT MIN(ID) AS MINID
	FROM KONTAKTDB.DBO.POSTCODES
	WHERE CODE <> '' AND CITY <> ''
	GROUP BY CITY, CODE)

SELECT * INTO #TEMP
FROM OPENQUERY(SINOSZ, 'SELECT * FROM CITIES')

--EZ IS SOKSZOROZ
DELETE #TEMP --SELECT *
FROM #TEMP
WHERE ID NOT IN 
	(SELECT MIN(ID) AS MINID
	FROM #TEMP
	WHERE ZIP <> '' AND CITYNAME <> ''
	GROUP BY CITYNAME, ZIP)

--MAP HELYES ADATOKKAL
SELECT A.Id,Code,City,Country,B.ID AS OLDID,CITYNAME,ZIP
INTO #POSTCODES_CITIES --DROP TABLE #POSTCODES_CITIES
FROM #TEMP B
LEFT OUTER JOIN KONTAKTDB.DBO.POSTCODES A 
	ON (
			(A.Code = B.ZIP AND A.City = B.CITYNAME)
			OR 
			A.Code = B.CITYNAME	AND A.CITY = B.ZIP		
		)

GO

IF (SELECT COUNT(*) FROM #TEMP) <> (SELECT COUNT(*) FROM #POSTCODES_CITIES)
	BEGIN
		print 'POSTCODES_CITIES <> CITIES TÁBLA MÉRETE ELTÉRÕ!'
		raiserror('Fatal error', 20, -1) with log
	END
	ELSE
	BEGIN
		DROP TABLE #TEMP
	END

GO

/*---ORGANIZATIONS---*/
SELECT * INTO #TEMP
FROM OPENQUERY(SINOSZ, 'SELECT * FROM ASSOCIATES')

--MAP HELYES ADATOKKAL
SELECT A.Id,OrganizationName,Address,Postcode_Id,UpperOrganization_Id,B.ID AS OLDID,MEGNEV,CITY,ARRANG,ZIP,STREET,TELEFON,E_MAIL
INTO #ORGANIZATIONS_ASSOCIATES --DROP TABLE #ORGANIZATIONS_ASSOCIATES
FROM KONTAKTDB.DBO.ORGANIZATIONS A
JOIN #TEMP B ON A.OrganizationName = B.MEGNEV 
	OR (A.OrganizationName = 'SINOSZ Füzesabonyi Klubja - megszûnt' AND B.MEGNEV = 'SINOSZ Füzesabonyi Klubja-megszûnt')
	OR (A.OrganizationName = 'SINOSZ Dombovári Klubja - megszûnt' AND B.MEGNEV = 'SINOSZ Dombóvári Klubja  - megszûnt')
	OR (A.OrganizationName = 'SINOSZ Hatvani Klubja - megszûnt' AND B.MEGNEV = 'SINOSZ Hatvani Kubja  - megszûnt')
	OR (A.OrganizationName = 'Helyi Szervezet Pápa - megszûnt 2012.12.31.' AND B.MEGNEV = 'Helyi Szervezet Pápa megszûnt 2012.12.31.')
WHERE B.MEGNEV <> ''

--UPDATE-ELEK, MERT A MAP-HEZ KELLENEK A VÁROSNVEK
UPDATE KONTAKTDB.DBO.ORGANIZATIONS
SET ORGANIZATIONS.Address=B.STREET,ORGANIZATIONS.Postcode_Id=C.Id,ORGANIZATIONS.UpperOrganization_Id=D.Id --SELECT *
FROM KONTAKTDB.DBO.ORGANIZATIONS A
JOIN #ORGANIZATIONS_ASSOCIATES B ON A.ID = B.Id 
JOIN KONTAKTDB.DBO.POSTCODES C ON B.ZIP = C.Code AND B.City <> 'Kaposvár'
	OR (B.ZIP = '' AND B.CITY = '' AND C.Code = '1007')
	OR (B.ZIP = '' AND B.CITY = 'Érd' AND C.Code = '2030')
	OR (B.ZIP = '' AND B.CITY = 'Fehérgyarmat' AND C.Code = '4900')
	OR (B.ZIP = '' AND B.CITY = 'Nagykanizsa' AND C.Code = '8800')
	OR (B.ZIP = '' AND B.CITY = 'Mátészalka' AND C.Code = '4700')
	OR (B.CITY = 'Kaposvár' AND C.Code = '7400' AND C.City = 'Kaposvár')
LEFT OUTER JOIN #ORGANIZATIONS_ASSOCIATES D ON B.ARRANG = D.OLDID

--MAP A BÉNA ADATOKKAL
INSERT #ORGANIZATIONS_ASSOCIATES
SELECT A.Id,OrganizationName,Address,Postcode_Id,UpperOrganization_Id,B.ID AS OLDID,MEGNEV,B.CITY,ARRANG,ZIP,STREET,TELEFON,E_MAIL
FROM #TEMP B
JOIN (SELECT MIN(Code) AS Code,City AS City FROM KONTAKTDB.DBO.POSTCODES GROUP BY City) C 
	ON C.City = RIGHT(B.MEGNEV,LEN(B.MEGNEV)-1)
		OR (C.City = 'Sopron' AND B.MEGNEV = '*Soproni')
		OR (C.Code = '1007' AND B.MEGNEV = '*Siketek Fovárosi Szervezete')
		OR (C.Code = '1007' AND B.MEGNEV = '*Siketek Fõvárosi Szervezete')
		OR (C.City = 'Fehérgyarmat' AND B.MEGNEV = '*SINOSZ Helyi Szervezete Fehérgyarmat')
		OR (C.City = 'Mátészalka' AND B.MEGNEV = '*SINOSZ Helyi Szervezete Mátészalka')
		OR (C.Code = '4246' AND B.MEGNEV = '*SINOSZ Megyei Szervezete Nyíregyháza')
		OR (C.Code = '1007' AND B.MEGNEV = '*Nagyothallók Fovárosi Szervezete')
JOIN KONTAKTDB.DBO.POSTCODES D ON D.City = C.City AND D.Code = C.Code 
JOIN KONTAKTDB.DBO.ORGANIZATIONS A 
	ON A.POSTCODE_ID = D.Id
		OR (A.OrganizationName = 'SINOSZ Fõvárosi szervezete' AND B.MEGNEV = '*Debrecen')
		OR (A.OrganizationName = 'SINOSZ Fõvárosi szervezete' AND B.MEGNEV = '*Encs')
		OR (A.OrganizationName = 'Gyõr-Moson-Sopron Megyei Szervezet' AND B.MEGNEV = '*Gyõr')
		OR (A.OrganizationName = 'SINOSZ Fõvárosi szervezete' AND B.MEGNEV = '*Hajdúböszörmény')
		OR (A.OrganizationName = 'Heves Megyei Szervezet' AND B.MEGNEV = '*Heves')
		OR (A.OrganizationName = 'SINOSZ Fõvárosi szervezete' AND B.MEGNEV = '*Jászberény')
		OR (A.OrganizationName = 'SINOSZ Fõvárosi szervezete' AND B.MEGNEV = '*Martfû')
		OR (A.OrganizationName = 'SINOSZ Fõvárosi szervezete' AND B.MEGNEV = '*Mezõtúr')
		OR (A.OrganizationName = 'SINOSZ Fõvárosi szervezete' AND B.MEGNEV = '*Miskolc')
		OR (A.OrganizationName = 'SINOSZ Fõvárosi szervezete' AND B.MEGNEV = '*SINOSZ Megyei Szervezete Nyíregyháza')
		OR (A.OrganizationName = 'SINOSZ Fõvárosi szervezete' AND B.MEGNEV = '*Nyíregyháza')
		OR (A.OrganizationName = 'SINOSZ Fõvárosi szervezete' AND B.MEGNEV = '*Oroszlány')
		OR (A.OrganizationName = 'SINOSZ Fõvárosi szervezete' AND B.MEGNEV = '*Paks')
		OR (A.OrganizationName = 'SINOSZ Fõvárosi szervezete' AND B.MEGNEV = '*Pécs')
		OR (A.OrganizationName = 'SINOSZ Fõvárosi szervezete' AND B.MEGNEV = '*Szeged')
		OR (A.OrganizationName = 'SINOSZ Fõvárosi szervezete' AND B.MEGNEV = '*Törökszentmiklós')
WHERE B.MEGNEV <> '' AND LEFT(B.MEGNEV,1)='*'

GO
	
IF (SELECT COUNT(Id) FROM #TEMP WHERE MEGNEV <> '') <> (SELECT COUNT(Id) FROM #ORGANIZATIONS_ASSOCIATES)
	BEGIN
		print 'ORGANIZATIONS_ASSOCIATES <> ASSOCIATES TÁBLA MÉRETE ELTÉRÕ!'
		raiserror('Fatal error', 20, -1) with log
	END
	ELSE
	BEGIN
		DROP TABLE #TEMP
	END

GO

/*---FILETYPES---*/
SELECT * INTO #TEMP
FROM OPENQUERY(SINOSZ, 'SELECT * FROM BLOBTYPES')

--MAP HELYES ADATOKKAL
SELECT A.Id,FileTypeName,B.ID AS OLDID,MEGNEV,FILEEXT,MIMETYPE
INTO #FILETYPES_BLOBTYPES --DROP TABLE #FILETYPES_BLOBTYPES
FROM KONTAKTDB.DBO.FILETYPES A
JOIN #TEMP B 
	ON A.FileTypeName = B.MEGNEV 
		OR (A.FileTypeName = 'Lakhelyigazolás külföldi állampolgárnak' AND B.MEGNEV = 'Lakhely igazolás külföldi állampolgárnak')
		OR (A.FileTypeName = 'Ig. csere igazolás 2' AND B.MEGNEV = 'ig. csere igazolás 2.')

GO

IF (SELECT COUNT(Id) FROM #TEMP) <> (SELECT COUNT(Id) FROM #FILETYPES_BLOBTYPES)
	BEGIN
		print 'FILETYPES_BLOBTYPES <> BLOBTYPES TÁBLA MÉRETE ELTÉRÕ!'
		raiserror('Fatal error', 20, -1) with log
	END
	ELSE
	BEGIN
		DROP TABLE #TEMP
	END

GO

/*---CARDSTATUS---*/
SELECT * INTO #TEMP
FROM OPENQUERY(SINOSZ, 'SELECT * FROM CARDSTATE')

--MAP HELYES ADATOKKAL
SELECT A.Id,CardStatusName,B.ID AS OLDID,MEGNEV,SORSZA
INTO #CARDSTATUS_CARDSTATE --DROP TABLE #CARDSTATUS_CARDSTATE
FROM KONTAKTDB.DBO.CARDSTATUS A
JOIN #TEMP B ON A.CardStatusName = B.MEGNEV 

GO

IF (SELECT COUNT(Id) FROM #TEMP) <> (SELECT COUNT(Id) FROM #CARDSTATUS_CARDSTATE)
	BEGIN
		print 'CARDSTATUS_CARDSTATE <> CARDSTATE TÁBLA MÉRETE ELTÉRÕ!'
		raiserror('Fatal error', 20, -1) with log
	END
	ELSE
	BEGIN
		DROP TABLE #TEMP
	END

GO

/*---NATIONS---*/
SELECT * INTO #TEMP
FROM OPENQUERY(SINOSZ, 'SELECT * FROM COUNTRIES')

--MAP HELYES ADATOKKAL
SELECT A.Id,NationText,B.ID AS OLDID,MEGNEV
INTO #NATIONS_COUNTRIES --DROP TABLE #NATIONS_COUNTRIES
FROM KONTAKTDB.DBO.NATIONS A
JOIN #TEMP B ON A.NationText = B.MEGNEV

GO

IF (SELECT COUNT(*) FROM #TEMP) <> (SELECT COUNT(*) FROM #NATIONS_COUNTRIES)
	BEGIN
		print 'NATIONS_COUNTRIES <> COUNTRIES TÁBLA MÉRETE ELTÉRÕ!'
		raiserror('Fatal error', 20, -1) with log
	END
	ELSE
	BEGIN
		DROP TABLE #TEMP
	END

GO

/*---INJURYTIMES---*/
SELECT * INTO #TEMP
FROM OPENQUERY(SINOSZ, 'SELECT * FROM DEAFDATES')

--MAP HELYES ADATOKKAL
SELECT A.Id,InjuryTimeText,B.ID AS OLDID,STATENAME
INTO #INJURYTIMES_DEAFDATES --DROP TABLE #INJURYTIMES_DEAFDATES
FROM #TEMP B
JOIN KONTAKTDB.DBO.INJURYTIMES A ON A.InjuryTimeText = B.STATENAME

--MAP BÉNA ADATOKKAL
INSERT #INJURYTIMES_DEAFDATES
SELECT A.Id,InjuryTimeText,B.ID AS OLDID,STATENAME
FROM #TEMP B
JOIN KONTAKTDB.DBO.INJURYTIMES A 
	ON A.InjuryTimeText = RIGHT(B.STATENAME,LEN(B.STATENAME)-1)
		OR B.STATENAME LIKE ('%'+A.InjuryTimeText+'%')
WHERE B.STATENAME <> '' AND LEFT(B.STATENAME,1)='*'

GO

IF (SELECT COUNT(*) FROM #TEMP) <> (SELECT COUNT(*) FROM #INJURYTIMES_DEAFDATES) + 284
	BEGIN
		print 'INJURYTIMES_DEAFDATES <> DEAFDATES TÁBLA MÉRETE ELTÉRÕ!'
		raiserror('Fatal error', 20, -1) with log
	END
	ELSE
	BEGIN
		DROP TABLE #TEMP
	END

GO

/*---HEARINGSTATUS---*/
SELECT * INTO #TEMP
FROM OPENQUERY(SINOSZ, 'SELECT * FROM DEAFSTATES')

--MAP HELYES ADATOKKAL
SELECT A.Id,HearingStatusName,B.ID AS OLDID,MEGNEV
INTO #HEARINGSTATUS_DEAFSTATES --DROP TABLE #HEARINGSTATUS_DEAFSTATES
FROM #TEMP B
JOIN KONTAKTDB.DBO.HEARINGSTATUS A ON A.HearingStatusName = B.MEGNEV

GO

IF (SELECT COUNT(*) FROM #TEMP) <> (SELECT COUNT(*) FROM #HEARINGSTATUS_DEAFSTATES)
	BEGIN
		print 'HEARINGSTATUS_DEAFSTATES <> DEAFSTATES TÁBLA MÉRETE ELTÉRÕ!'
		raiserror('Fatal error', 20, -1) with log
	END
	ELSE
	BEGIN
		DROP TABLE #TEMP
	END

GO

/*---ACCOUNTINGTYPES---*/
SELECT * INTO #TEMP
FROM OPENQUERY(SINOSZ, 'SELECT * FROM DUES')

--SAJNA A LETILTOTTAK IS KELLNEK AZ ÉLESBE
INSERT KONTAKTDB.DBO.ACCOUNTINGTYPES
	(Id,AccountingTypeName,isFixsum,Presum,isMembershipCost,isCardCost,isEnabled,Relationship_Id)
SELECT 
	NEWID(),DUE
	,CASE WHEN FIXED='I' THEN 1 ELSE 0 END
	,CASE WHEN OSSZEG IS NULL THEN 0 ELSE CAST(OSSZEG AS FLOAT) END
	,CASE WHEN ISTAGDIJ='I' THEN 1 ELSE 0 END
	,CASE WHEN IGAZOLVANY='I' THEN 1 ELSE 0 END
	,CASE WHEN ENABLED='I' THEN 1 ELSE 0 END
	,C.Id
FROM #TEMP B
LEFT OUTER JOIN KONTAKTDB.DBO.ACCOUNTINGTYPES A ON A.AccountingTypeName = B.DUE
LEFT OUTER JOIN KONTAKTDB.DBO.Relationships C ON 
(C.RelationshipName = 'Rendes' AND B.RELATIVE = 'R')
OR (C.RelationshipName = 'Pártoló' AND B.RELATIVE = 'P')
OR (C.RelationshipName = 'Tanuló' AND B.RELATIVE = 'T')
OR (C.RelationshipName = 'Tagdíjmentes' AND B.RELATIVE = 'Tm')
OR (C.RelationshipName = 'Nyugdíjas' AND B.RELATIVE = 'Ny')
OR (C.RelationshipName = 'Kölyökklub' AND B.RELATIVE = 'Kk')
WHERE A.Id IS NULL AND B.DUE <> '1'

--MAP HELYES ADATOKKAL
SELECT A.Id,AccountingTypeName,isFixsum,Presum,isMembershipCost,isCardCost,isEnabled,Relationship_Id,AUTOINC AS OLDID,DUE,FIXED,OSSZEG,ISTAGDIJ,IGAZOLVANY,RELATIVE,ENABLED
INTO #ACCOUNTINGTYPES_DUES --DROP TABLE #ACCOUNTINGTYPES_DUES
FROM #TEMP B
JOIN KONTAKTDB.DBO.ACCOUNTINGTYPES A ON A.AccountingTypeName = B.DUE
WHERE B.DUE <> '1'

GO

IF (SELECT COUNT(*) FROM #TEMP) <> (SELECT COUNT(*) FROM #ACCOUNTINGTYPES_DUES) + 1
	BEGIN
		print 'ACCOUNTINGTYPES_DUES <> DUES TÁBLA MÉRETE ELTÉRÕ!'
		raiserror('Fatal error', 20, -1) with log
	END
	ELSE
	BEGIN
		DROP TABLE #TEMP
	END

GO

/*---EDUCATIONS---*/
SELECT * INTO #TEMP
FROM OPENQUERY(SINOSZ, 'SELECT * FROM EDUCATION')

--MAP HELYES ADATOKKAL
SELECT A.Id,A.EducationName,B.ID AS OLDID,B.EDUCATIONNAME AS OLDEDUCATIONNAME
INTO #EDUCATIONS_EDUCATION --DROP TABLE #EDUCATIONS_EDUCATION
FROM #TEMP B
JOIN KONTAKTDB.DBO.EDUCATIONS A 
	ON A.EducationName = B.EDUCATIONNAME
		OR (A.EducationName = 'Kisebb, mint 8 ált.' AND B.EDUCATIONNAME = 'Kevesebb, mint 8 ált.')
		OR (A.EducationName = 'Oktatási intézményen kívüli felsõfokú' AND B.EDUCATIONNAME = 'Oktatási rendszeren kívüli felsõfokú')
		OR (A.EducationName = 'Oktatási intézményen kívüli középfokú' AND B.EDUCATIONNAME = 'Oktatási rendszeren kívüli középfokú')
WHERE LEN(B.EDUCATIONNAME) > 2

--MAP A BÉNA ADATOKKAL
INSERT #EDUCATIONS_EDUCATION
SELECT A.Id,A.EducationName,B.ID AS OLDID,B.EDUCATIONNAME AS OLDEDUCATIONNAME
FROM #TEMP B
JOIN KONTAKTDB.DBO.EDUCATIONS A 
	ON A.EducationName = RIGHT(B.EDUCATIONNAME,LEN(B.EDUCATIONNAME)-1)
		OR A.EducationName = RIGHT(B.EDUCATIONNAME,LEN(B.EDUCATIONNAME)-2)
WHERE LEN(B.EDUCATIONNAME) > 2 AND LEFT(B.EDUCATIONNAME,1)='*'

GO

IF (SELECT COUNT(*) FROM #TEMP) <> (SELECT COUNT(*) FROM #EDUCATIONS_EDUCATION) + 4 + 416
	BEGIN
		print 'EDUCATIONS_EDUCATION <> EDUCATION TÁBLA MÉRETE ELTÉRÕ!'
		raiserror('Fatal error', 20, -1) with log
	END
	ELSE
	BEGIN
		DROP TABLE #TEMP
	END

GO

/*---MARITALSTATUS---*/
SELECT * INTO #TEMP
FROM OPENQUERY(SINOSZ, 'SELECT * FROM FSTATES')

--MAP HELYES ADATOKKAL
SELECT A.Id,A.MaritalStatusName,B.ID AS OLDID,MEGNEV
INTO #MARITALSTATUS_FSTATES --DROP TABLE #MARITALSTATUS_FSTATES
FROM #TEMP B
JOIN KONTAKTDB.DBO.MARITALSTATUS A 
	ON A.MaritalStatusName = B.MEGNEV

--MAP A BÉNA ADATOKKAL
INSERT #MARITALSTATUS_FSTATES
SELECT A.Id,A.MaritalStatusName,B.ID AS OLDID,MEGNEV
FROM #TEMP B
JOIN KONTAKTDB.DBO.MARITALSTATUS A 
	ON A.MaritalStatusName = RIGHT(B.MEGNEV,LEN(B.MEGNEV)-1)
		OR A.MaritalStatusName = RIGHT(B.MEGNEV,LEN(B.MEGNEV)-2)
WHERE LEN(B.MEGNEV) > 2 AND LEFT(B.MEGNEV,1)='*'

GO

IF (SELECT COUNT(*) FROM #TEMP) <> (SELECT COUNT(*) FROM #MARITALSTATUS_FSTATES) + 104
	BEGIN
		print 'MARITALSTATUS_FSTATES <> FSTATES TÁBLA MÉRETE ELTÉRÕ!'
		raiserror('Fatal error', 20, -1) with log
	END
	ELSE
	BEGIN
		DROP TABLE #TEMP
	END

GO

/*---POSITIONS---*/
SELECT * INTO #TEMP
FROM OPENQUERY(SINOSZ, 'SELECT * FROM FUNCTIONS')

SELECT ID, MAX(FUNC) AS FUNC INTO #TEMP2
FROM #TEMP
GROUP BY ID

--Ezt még egyáltalán nem töltöttem fel
INSERT KONTAKTDB.DBO.POSITIONS
	(Id,PositionName)
SELECT NEWID(), B.FUNC
FROM (
SELECT DISTINCT FUNC AS FUNC
FROM #TEMP2 B
LEFT OUTER JOIN KONTAKTDB.DBO.POSITIONS A ON A.PositionName = B.FUNC
WHERE A.Id IS NULL AND LEFT(B.FUNC,1)<> '*' AND B.FUNC <> ''
) B

--MAP HELYES ADATOKKAL
SELECT A.Id,A.PositionName,B.ID AS OLDID,FUNC
INTO #POSITIONS_FUNCTIONS --DROP TABLE #POSITIONS_FUNCTIONS
FROM #TEMP2 B
JOIN KONTAKTDB.DBO.POSITIONS A 
	ON A.PositionName = B.FUNC

--MAP A BÉNA ADATOKKAL
INSERT #POSITIONS_FUNCTIONS
SELECT A.Id,A.PositionName,B.ID AS OLDID,FUNC
FROM #TEMP2 B
JOIN KONTAKTDB.DBO.POSITIONS A 
	ON A.PositionName = RIGHT(B.FUNC,LEN(B.FUNC)-1)
		OR A.PositionName = RIGHT(B.FUNC,LEN(B.FUNC)-2)
WHERE LEN(B.FUNC) > 2 AND LEFT(B.FUNC,1)='*'

GO

IF (SELECT COUNT(*) FROM #TEMP2) <> (SELECT COUNT(*) FROM #POSITIONS_FUNCTIONS) + 2
	BEGIN
		print 'POSITIONS_FUNCTIONS <> FUNCTIONS TÁBLA MÉRETE ELTÉRÕ!'
		raiserror('Fatal error', 20, -1) with log
	END
	ELSE
	BEGIN
		DROP TABLE #TEMP
		DROP TABLE #TEMP2
	END

GO

/*---GENUS---*/
SELECT * INTO #TEMP
FROM OPENQUERY(SINOSZ, 'SELECT * FROM NEMEK')

--MAP HELYES ADATOKKAL
SELECT A.Id,A.GenusName,B.ID AS OLDID,MEGNEV
INTO #GENUS_NEMEK --DROP TABLE #GENUS_NEMEK
FROM #TEMP B
JOIN KONTAKTDB.DBO.GENUS A 
	ON A.GenusName = B.MEGNEV

--MAP A BÉNA ADATOKKAL
INSERT #GENUS_NEMEK
SELECT A.Id,A.GenusName,B.ID AS OLDID,MEGNEV
FROM #TEMP B
JOIN KONTAKTDB.DBO.GENUS A 
	ON A.GenusName = RIGHT(B.MEGNEV,LEN(B.MEGNEV)-1)
		OR A.GenusName = RIGHT(B.MEGNEV,LEN(B.MEGNEV)-2)
WHERE LEN(B.MEGNEV) > 2 AND LEFT(B.MEGNEV,1)='*'

GO

IF (SELECT COUNT(*) FROM #TEMP) <> (SELECT COUNT(*) FROM #GENUS_NEMEK) + 3
	BEGIN
		print 'GENUS_NEMEK <> NEMEK TÁBLA MÉRETE ELTÉRÕ!'
		raiserror('Fatal error', 20, -1) with log
	END
	ELSE
	BEGIN
		DROP TABLE #TEMP
	END

GO

/*---ADDRESSTYPES---*/
SELECT * INTO #TEMP
FROM OPENQUERY(SINOSZ, 'SELECT * FROM PHONETYPES')

--MAP HELYES ADATOKKAL
SELECT A.Id,A.AddressTypeName,B.ID AS OLDID,PHONETYPE
INTO #ADDRESSTYPES_PHONETYPES --DROP TABLE #ADDRESSTYPES_PHONETYPES
FROM #TEMP B
JOIN KONTAKTDB.DBO.ADDRESSTYPES A 
	ON A.AddressTypeName = B.PHONETYPE

GO

IF (SELECT COUNT(*) FROM #TEMP) <> (SELECT COUNT(*) FROM #ADDRESSTYPES_PHONETYPES)
	BEGIN
		print 'ADDRESSTYPES_PHONETYPES <> PHONETYPES TÁBLA MÉRETE ELTÉRÕ!'
		raiserror('Fatal error', 20, -1) with log
	END
	ELSE
	BEGIN
		DROP TABLE #TEMP
	END

GO

/*---RELATIONSHIPS---*/
SELECT * INTO #TEMP
FROM OPENQUERY(SINOSZ, 'SELECT * FROM RELATIVES')

--MAP HELYES ADATOKKAL
SELECT A.Id,A.RelationshipName,B.ID AS OLDID,MEGNEV
INTO #RELATIONSHIPS_RELATIVES --DROP TABLE #RELATIONSHIPS_RELATIVES
FROM #TEMP B
JOIN KONTAKTDB.DBO.RELATIONSHIPS A 
	ON A.RelationshipName = B.MEGNEV

GO

IF (SELECT COUNT(*) FROM #TEMP) <> (SELECT COUNT(*) FROM #RELATIONSHIPS_RELATIVES)
	BEGIN
		print 'RELATIONSHIPS_RELATIVES <> RELATIVES TÁBLA MÉRETE ELTÉRÕ!'
		raiserror('Fatal error', 20, -1) with log
	END
	ELSE
	BEGIN
		DROP TABLE #TEMP
	END

GO

/*---PENSIONTYPES---*/
SELECT * INTO #TEMP
FROM OPENQUERY(SINOSZ, 'SELECT * FROM RETIRES')

--MAP HELYES ADATOKKAL
SELECT A.Id,A.PensionTypeName,B.ID AS OLDID,MEGNEV
INTO #PENSIONTYPES_RETIRES --DROP TABLE #PENSIONTYPES_RETIRES
FROM #TEMP B
JOIN KONTAKTDB.DBO.PENSIONTYPES A 
	ON A.PensionTypeName = B.MEGNEV
		OR A.PensionTypeName = 'Kork. nyugdíj' AND B.MEGNEV = 'Kork.nyugdíj'

--MAP A BÉNA ADATOKKAL
INSERT #PENSIONTYPES_RETIRES
SELECT A.Id,A.PensionTypeName,B.ID AS OLDID,MEGNEV
FROM #TEMP B
JOIN KONTAKTDB.DBO.PENSIONTYPES A 
	ON A.PensionTypeName = RIGHT(B.MEGNEV,LEN(B.MEGNEV)-1)
		OR A.PensionTypeName = RIGHT(B.MEGNEV,LEN(B.MEGNEV)-2)
		OR A.PensionTypeName = 'Árvaellátás' AND B.MEGNEV = '*Árvaellátá'
		OR A.PensionTypeName = 'Kork. nyugdíj' AND B.MEGNEV = '*Korkedvezm'
		OR A.PensionTypeName = 'Nincs' AND B.MEGNEV = '*NincsAdat'
		OR A.PensionTypeName = 'Nincs' AND B.MEGNEV = '*NincsRends'
		OR A.PensionTypeName = 'Öregségi' AND B.MEGNEV = '*ÖregségiNy'
		OR A.PensionTypeName = 'Özvegyi' AND B.MEGNEV = '*ÖzvegyiNyu'
		OR A.PensionTypeName = 'Rokk. ellátás' AND B.MEGNEV = '*rokkant'		
		OR A.PensionTypeName = 'Rokk. ellátás' AND B.MEGNEV = '*RokkantJár'
		OR A.PensionTypeName = 'Rokk. ellátás' AND B.MEGNEV = '*RokkantNyu'
WHERE LEN(B.MEGNEV) > 2 AND LEFT(B.MEGNEV,1)='*'

GO

IF (SELECT COUNT(*) FROM #TEMP) <> (SELECT COUNT(*) FROM #PENSIONTYPES_RETIRES) + 10
	BEGIN
		print 'PENSIONTYPES_RETIRES <> RETIRES TÁBLA MÉRETE ELTÉRÕ!'
		raiserror('Fatal error', 20, -1) with log
	END
	ELSE
	BEGIN
		DROP TABLE #TEMP
	END

GO

/*---SINOSZUSERS---*/
SELECT * INTO #TEMP
FROM OPENQUERY(SINOSZ, 'SELECT * FROM TAGOK')

DELETE #TEMP
--SELECT *
FROM #TEMP
WHERE #TEMP.STATUSZ = 'T'

DELETE KONTAKTDB.DBO.ACCOUNTINGDOCUMENTS
DELETE KONTAKTDB.DBO.CARDS
DELETE KONTAKTDB.DBO.ADDRESSES
DELETE KONTAKTDB.DBO.SINOSZLOGS
DELETE KONTAKTDB.DBO.ATTACHEDFILES
DELETE KONTAKTDB.DBO.FILES
--Üresbõl indulok
--DELETE KONTAKTDB.DBO.AspNetUserRoles 
--DELETE KONTAKTDB.DBO.KontaktUserRoles
--DELETE KONTAKTDB.DBO.PBXExtensionDatas
--DELETE KONTAKTDB.DBO.ASPNETUSERS WHERE SinoszUser_Id IS NOT NULL
DELETE KONTAKTDB.DBO.SINOSZUSERS

SELECT
	NEWID() AS Id
	,CASE WHEN B.BDAT > '1800.01.01' THEN CONVERT(DATETIME,B.BDAT) ELSE '1800.01.01' END AS BirthDate
	,CASE WHEN B.TAGAZON IS NULL THEN '' ELSE B.TAGAZON END AS SinoszId
	,CASE WHEN B.NAME IS NULL THEN '' ELSE B.NAME END AS SinoszUserName
	,CASE WHEN B.BPLACE IS NULL THEN '' ELSE B.BPLACE END AS BirthPlace
	,CASE WHEN B.MNAME IS NULL THEN '' ELSE B.MNAME END AS MothersName
	,CASE WHEN B.STREET IS NULL THEN '' ELSE B.STREET END AS HomeAddress
	,CASE WHEN B.ENTERDATE > '1800.01.01' THEN CONVERT(DATETIME,B.ENTERDATE) ELSE '1800.01.01' END AS EnterDate
	,CASE WHEN B.HATSORSZ IS NULL THEN '' ELSE B.HATSORSZ END AS DecreeNumber
	,B.BNAME AS BirthName
	,B.REMARK AS Remark
	,B.PROFESSIONAL AS Qualification
	,CASE WHEN B.CIMPLANT = 'I' THEN 1 ELSE 0 END AS isImplant
	,CASE WHEN B.DEAFAID = 'I' THEN 1 ELSE 0 END AS isHearingAid
	,#POSTCODES_CITIES.Id AS Postcode_Id--CITYID
	,#EDUCATIONS_EDUCATION.Id AS Education_Id--EDUCATION
	,#GENUS_NEMEK.Id AS Genus_Id--SEX
	,#HEARINGSTATUS_DEAFSTATES.Id AS HearingStatus_Id--DEFSTATE
	,#INJURYTIMES_DEAFDATES.Id AS InjuryTime_Id--DEFDATE
	,#MARITALSTATUS_FSTATES.Id AS MaritalStatus_Id--FSTATE
	,#NATIONS_COUNTRIES.Id AS Nation_Id--COUNTRY
	,#ORGANIZATIONS_ASSOCIATES.Id AS Organization_Id--ASSOCIATE
	,#PENSIONTYPES_RETIRES.Id AS PensionType_Id--RETIRE
	,#POSITIONS_FUNCTIONS.Id AS Position_Id
	,#RELATIONSHIPS_RELATIVES.Id AS Relationship_Id--RELATIVE
	,C.Id AS SinoszUserStatus_Id
	,B.ID AS OLDID
	--,B.ALKID
	--,B.SCHOOL
	--,B.PWORK
	--,B.OTHER
	--,B.EDITSTATUS
	--,B.LASTPAYMENT
	--,B.LASTPAYMENTDATE
	--,B.LASTEDITED
	,B.BARCODE AS Barcode
INTO #SINOSZUSERS
FROM #TEMP B
	LEFT OUTER JOIN #POSTCODES_CITIES ON B.CITYID = #POSTCODES_CITIES.OLDID
	LEFT OUTER JOIN #EDUCATIONS_EDUCATION ON B.EDUCATION = #EDUCATIONS_EDUCATION.OLDID
	LEFT OUTER JOIN #GENUS_NEMEK ON B.SEX =  #GENUS_NEMEK.OLDID
	LEFT OUTER JOIN #HEARINGSTATUS_DEAFSTATES ON B.DEFSTATE = #HEARINGSTATUS_DEAFSTATES.OLDID
	LEFT OUTER JOIN #INJURYTIMES_DEAFDATES ON B.DEFDATE = #INJURYTIMES_DEAFDATES.OLDID
	LEFT OUTER JOIN #MARITALSTATUS_FSTATES ON B.FSTATE = #MARITALSTATUS_FSTATES.OLDID
	LEFT OUTER JOIN #NATIONS_COUNTRIES ON B.COUNTRY =  #NATIONS_COUNTRIES.OLDID
	LEFT OUTER JOIN #ORGANIZATIONS_ASSOCIATES ON B.ASSOCIATE = #ORGANIZATIONS_ASSOCIATES.OLDID
	LEFT OUTER JOIN #PENSIONTYPES_RETIRES ON B.RETIRE = #PENSIONTYPES_RETIRES.OLDID
	LEFT OUTER JOIN #POSITIONS_FUNCTIONS ON B.ID = #POSITIONS_FUNCTIONS.OLDID--SOKSZOROZÓDÁS
	LEFT OUTER JOIN #RELATIONSHIPS_RELATIVES ON B.RELATIVE = #RELATIONSHIPS_RELATIVES.OLDID
	LEFT OUTER JOIN KONTAKTDB.DBO.SINOSZUSERSTATUS C
					ON (B.STATUSZ = 'A' AND C.StatusName = 'Aktív')
						OR (B.STATUSZ = 'I' AND C.StatusName = 'Inaktív')
						OR (B.STATUSZ = 'T' AND C.StatusName = 'Törölt')
						OR (B.STATUSZ = 'V' AND C.StatusName = 'Várakozó')

--BE IS VÁGOM
INSERT KONTAKTDB.DBO.SINOSZUSERS
	(Id,BirthDate,SinoszId,SinoszUserName,BirthPlace,MothersName,HomeAddress,EnterDate,DecreeNumber,BirthName,Remark,Qualification,isImplant,isHearingAid,Barcode,Postcode_Id,Education_Id,Genus_Id,HearingStatus_Id,InjuryTime_Id,MaritalStatus_Id
	,Nation_Id,Organization_Id,PensionType_Id,Position_Id,Relationship_Id,SinoszUserStatus_Id)
SELECT
	Id,BirthDate,SinoszId,SinoszUserName,BirthPlace,MothersName,HomeAddress,EnterDate,DecreeNumber,BirthName,Remark,Qualification,isImplant,isHearingAid,Barcode,Postcode_Id,Education_Id,Genus_Id,HearingStatus_Id,InjuryTime_Id,MaritalStatus_Id
	,Nation_Id,Organization_Id,PensionType_Id,Position_Id,Relationship_Id,SinoszUserStatus_Id
FROM #SINOSZUSERS

GO

DROP TABLE #TEMP

GO

/*---ADDRESSES---*/
SELECT * INTO #TEMP
FROM OPENQUERY(SINOSZ, 'SELECT * FROM PHONES')

--Bevágom
INSERT KONTAKTDB.DBO.ADDRESSES
	(Id,AddressText,AddressType_Id,SinoszUser_Id)
SELECT 
	NEWID()
	,B.PHONE
	,#ADDRESSTYPES_PHONETYPES.Id
	,C.Id
FROM #TEMP B
	LEFT OUTER JOIN #ADDRESSTYPES_PHONETYPES ON B.PHONETYPE = #ADDRESSTYPES_PHONETYPES.OLDID
	LEFT OUTER JOIN #SINOSZUSERS C ON B.ID = C.OLDID

GO

DROP TABLE #TEMP

GO

/*---ACCOUNTINGDOCUMENTS---*/
SELECT * INTO #TEMP
FROM OPENQUERY(SINOSZ, 'SELECT * FROM PAYMENTS')

--Bevágom
INSERT  KONTAKTDB.DBO.ACCOUNTINGDOCUMENTS
	(Id,DocumentDate,DocumnetNumber,Sum,AccountingStatus_Id,AccountingType_Id,SinoszUser_Id)
SELECT 
	NEWID()
	,CASE WHEN B.DATUM > '1800.01.01' THEN CONVERT(DATETIME,B.DATUM) ELSE '1800.01.01' END
	,BIZSZA
	,CONVERT(REAL, B.OSSZEG)
	,D.Id
	,#ACCOUNTINGTYPES_DUES.Id
	,C.Id
FROM #TEMP B
	LEFT OUTER JOIN #ACCOUNTINGTYPES_DUES ON B.JOGCIM = #ACCOUNTINGTYPES_DUES.OLDID
	LEFT OUTER JOIN #SINOSZUSERS C ON B.ID = C.OLDID
	LEFT OUTER JOIN KONTAKTDB.DBO.ACCOUNTINGSTATUS D 
		ON (B.TOROLT = 'I' AND D.AccountingStatusName = 'Törölve')
			OR (B.TOROLT = 'N' AND D.AccountingStatusName = 'Tény')

GO

DROP TABLE #TEMP

GO

--nyalánkság: keresõmezõk beállítása a sinoszuseren
UPDATE KONTAKTDB.DBO.SINOSZUSERS
SET LastAccountingDocument = NULL

UPDATE KONTAKTDB.DBO.SINOSZUSERS
SET LastAccountingDocument = D.Id
--SELECT *
FROM KONTAKTDB.DBO.SINOSZUSERS S
JOIN KONTAKTDB.DBO.ACCOUNTINGDOCUMENTS D 
	ON S.Id = D.SinoszUser_Id
		AND D.Id =
			(
				SELECT TOP 1 A.Id--, A.SinoszUser_Id
				FROM KONTAKTDB.DBO.ACCOUNTINGDOCUMENTS A
				JOIN KONTAKTDB.DBO.ACCOUNTINGTYPES B ON A.AccountingType_Id = B.Id AND B.AccountingTypeName <> 'Visszafizetés'
				JOIN KONTAKTDB.DBO.ACCOUNTINGSTATUS C ON A.AccountingStatus_Id = C.Id AND C.AccountingStatusName = 'Tény'
				WHERE A.SinoszUser_Id = S.Id
				ORDER BY A.DocumentDate DESC
			)

/*---CARDS---*/
SELECT * INTO #TEMP
FROM OPENQUERY(SINOSZ, 'SELECT * FROM CARDS')

--Bevágom
INSERT KONTAKTDB.DBO.CARDS
	(Id,Remark,CardStatus_Id,CreateDate,SinoszUser_Id)
SELECT 
	NEWID()
	,MEGJEG
	,#CARDSTATUS_CARDSTATE.Id
	,CASE WHEN B.STARTDATE > '1800.01.01' THEN CONVERT(DATETIME,B.STARTDATE) ELSE '1800.01.01' END
	,C.Id
FROM #TEMP B
	LEFT OUTER JOIN #CARDSTATUS_CARDSTATE ON B.STATE = #CARDSTATUS_CARDSTATE.OLDID
	LEFT OUTER JOIN #SINOSZUSERS C ON B.ID = C.OLDID

GO

DROP TABLE #TEMP

GO

--nyalánkság: keresõmezõk beállítása a sinoszuseren
UPDATE KONTAKTDB.DBO.SINOSZUSERS
SET LastCard = NULL

UPDATE KONTAKTDB.DBO.SINOSZUSERS
SET LastCard = C.Id
--SELECT *
FROM KONTAKTDB.DBO.SINOSZUSERS S
JOIN KONTAKTDB.DBO.CARDS C 
	ON S.Id = C.SinoszUser_Id
		AND C.Id =
			(
				SELECT TOP 1 A.Id--, A.SinoszUser_Id
				FROM KONTAKTDB.DBO.CARDS A
				WHERE A.SinoszUser_Id = S.Id
				ORDER BY A.CreateDate DESC
			)

/*---SINOSZLOGS---*/
SELECT * INTO #TEMP
FROM OPENQUERY(SINOSZ, 'SELECT * FROM NAPLO')

DELETE #TEMP
WHERE (AEVENT = 'LOGIN' OR AEVENT = 'LOGOUT' OR AEVENT = 'PRINT' OR AEVENT = 'CSVSAVE')

--Bevágom
INSERT KONTAKTDB.DBO.SINOSZLOGS
	(Id,ActionTime,ActionName,ApplicationUser_Id,SinoszUser_Id)
SELECT 
	NEWID()
	,CASE WHEN B.DATUM > '1800.01.01' THEN CONVERT(DATETIME,B.DATUM) ELSE '1800.01.01' END
	,LEIRAS
	,D.Id--ÚGY SINCS ÖSSZEKÖTVE A REGISZTRÁCIÓBAN
	,C.Id
FROM #TEMP B
	LEFT OUTER JOIN #SINOSZUSERS C ON CONVERT(INT,B.AEVENT) = C.OLDID
	LEFT OUTER JOIN  KONTAKTDB.DBO.AspNetUsers D ON D.SinoszUser_Id = C.Id

GO

DROP TABLE #TEMP

GO

--memóriát szabadítok fel
DROP TABLE #POSTCODES_CITIES         --
DROP TABLE #ORGANIZATIONS_ASSOCIATES --
DROP TABLE #CARDSTATUS_CARDSTATE     --
DROP TABLE #NATIONS_COUNTRIES        --
DROP TABLE #INJURYTIMES_DEAFDATES    --
DROP TABLE #HEARINGSTATUS_DEAFSTATES --
DROP TABLE #ACCOUNTINGTYPES_DUES     --
DROP TABLE #EDUCATIONS_EDUCATION     --
DROP TABLE #MARITALSTATUS_FSTATES    --
DROP TABLE #POSITIONS_FUNCTIONS      --
DROP TABLE #GENUS_NEMEK              --
DROP TABLE #ADDRESSTYPES_PHONETYPES  --
DROP TABLE #RELATIONSHIPS_RELATIVES  --
DROP TABLE #PENSIONTYPES_RETIRES     --

/*---ATTECHEDFILES ÉS FILES---*/
DECLARE @BGN INT = 1
DECLARE @GAP INT = 1000
DECLARE @NXT INT
DECLARE @END INT
DECLARE @STR NVARCHAR(max)
SELECT @END = COUNT FROM OPENQUERY(SINOSZ, 'SELECT COUNT(*) FROM BLOBS')

WHILE (@BGN <= @END)
BEGIN
	SET @NXT =  @BGN + @GAP - 1
	SELECT NEWID() AS NID, * INTO #TEMP FROM OPENQUERY(SINOSZ, 'SELECT * FROM BLOBS ROWS 1000000 TO 1000000')
	SET @STR = 'INSERT INTO #TEMP SELECT NEWID() AS NID, * FROM OPENQUERY(SINOSZ, ''SELECT * FROM BLOBS ROWS ' + CONVERT(NVARCHAR(10), @BGN) + ' TO ' + CONVERT(NVARCHAR(10), @NXT) + ''')'
	PRINT @STR
	EXEC(@STR)

	--Bevágom
	INSERT KONTAKTDB.DBO.ATTACHEDFILES
		(Id,SinoszUser_Id,FileType_Id,FileId)
	SELECT 
		NEWID()
		,C.Id
		,D.Id
		,B.NID
	FROM #TEMP B
		LEFT OUTER JOIN #SINOSZUSERS C ON B.TAGID = C.OLDID
		LEFT OUTER JOIN #FILETYPES_BLOBTYPES D ON B.BLOBTYPE = D.OLDID		

	INSERT KONTAKTDB.DBO.FILES
		(stream_id,file_stream,name)
	SELECT 
		B.NID AS stream_id
		,B.ERTEK AS file_stream
		,CASE WHEN B.ORIGINALFILENAME IS NULL 
			THEN CONVERT(NVARCHAR(255), B.NID) + '_NULL' 
			ELSE CONVERT(NVARCHAR(255), B.NID) + '_' + REPLACE(REPLACE(B.ORIGINALFILENAME, '''', ''),'\','')
			END AS name 
	FROM #TEMP B	

	DROP TABLE #TEMP	

	SET @BGN = @BGN + @GAP

END

GO

DROP TABLE #SINOSZUSERS              --
DROP TABLE #FILETYPES_BLOBTYPES      --

GO