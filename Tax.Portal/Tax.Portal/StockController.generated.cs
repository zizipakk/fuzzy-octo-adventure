// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Tax.Portal.Controllers
{
    public partial class StockController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public StockController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected StockController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Devices()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Devices);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult ListDevices()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListDevices);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateDevices()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDevices);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult ListDeviceLogFromDevice()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListDeviceLogFromDevice);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateDeviceLogFromDevice()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDeviceLogFromDevice);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateDeviceLogUser()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDeviceLogUser);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult InsertDeviceLogKontaktUser()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.InsertDeviceLogKontaktUser);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult ListDeviceLogFromUser()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListDeviceLogFromUser);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult ListReservationTimes()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListReservationTimes);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateReservationTimes()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateReservationTimes);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult ListReservatorUsers()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListReservatorUsers);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateisPresent()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateisPresent);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public StockController Actions { get { return MVC.Stock; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Stock";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Stock";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Devices = "Devices";
            public readonly string ListDevices = "ListDevices";
            public readonly string UpdateDevices = "UpdateDevices";
            public readonly string ListDeviceLogFromDevice = "ListDeviceLogFromDevice";
            public readonly string UpdateDeviceLogFromDevice = "UpdateDeviceLogFromDevice";
            public readonly string UpdateDeviceLogUser = "UpdateDeviceLogUser";
            public readonly string InsertDeviceLogKontaktUser = "InsertDeviceLogKontaktUser";
            public readonly string Users = "Users";
            public readonly string ListDeviceLogFromUser = "ListDeviceLogFromUser";
            public readonly string ReservationAdmin = "ReservationAdmin";
            public readonly string ListReservationTimes = "ListReservationTimes";
            public readonly string UpdateReservationTimes = "UpdateReservationTimes";
            public readonly string ListReservatorUsers = "ListReservatorUsers";
            public readonly string UpdateisPresent = "UpdateisPresent";
            public readonly string Reservation = "Reservation";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Devices = "Devices";
            public const string ListDevices = "ListDevices";
            public const string UpdateDevices = "UpdateDevices";
            public const string ListDeviceLogFromDevice = "ListDeviceLogFromDevice";
            public const string UpdateDeviceLogFromDevice = "UpdateDeviceLogFromDevice";
            public const string UpdateDeviceLogUser = "UpdateDeviceLogUser";
            public const string InsertDeviceLogKontaktUser = "InsertDeviceLogKontaktUser";
            public const string Users = "Users";
            public const string ListDeviceLogFromUser = "ListDeviceLogFromUser";
            public const string ReservationAdmin = "ReservationAdmin";
            public const string ListReservationTimes = "ListReservationTimes";
            public const string UpdateReservationTimes = "UpdateReservationTimes";
            public const string ListReservatorUsers = "ListReservatorUsers";
            public const string UpdateisPresent = "UpdateisPresent";
            public const string Reservation = "Reservation";
        }


        static readonly ActionParamsClass_Devices s_params_Devices = new ActionParamsClass_Devices();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Devices DevicesParams { get { return s_params_Devices; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Devices
        {
            public readonly string KontaktUserId = "KontaktUserId";
        }
        static readonly ActionParamsClass_ListDevices s_params_ListDevices = new ActionParamsClass_ListDevices();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListDevices ListDevicesParams { get { return s_params_ListDevices; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListDevices
        {
            public readonly string grid = "grid";
        }
        static readonly ActionParamsClass_UpdateDevices s_params_UpdateDevices = new ActionParamsClass_UpdateDevices();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateDevices UpdateDevicesParams { get { return s_params_UpdateDevices; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateDevices
        {
            public readonly string id = "id";
            public readonly string oper = "oper";
            public readonly string d = "d";
            public readonly string DeviceTypeName = "DeviceTypeName";
            public readonly string DeviceStatusName = "DeviceStatusName";
        }
        static readonly ActionParamsClass_ListDeviceLogFromDevice s_params_ListDeviceLogFromDevice = new ActionParamsClass_ListDeviceLogFromDevice();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListDeviceLogFromDevice ListDeviceLogFromDeviceParams { get { return s_params_ListDeviceLogFromDevice; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListDeviceLogFromDevice
        {
            public readonly string grid = "grid";
            public readonly string devId = "devId";
        }
        static readonly ActionParamsClass_UpdateDeviceLogFromDevice s_params_UpdateDeviceLogFromDevice = new ActionParamsClass_UpdateDeviceLogFromDevice();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateDeviceLogFromDevice UpdateDeviceLogFromDeviceParams { get { return s_params_UpdateDeviceLogFromDevice; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateDeviceLogFromDevice
        {
            public readonly string id = "id";
            public readonly string oper = "oper";
            public readonly string d = "d";
            public readonly string AreaName = "AreaName";
            public readonly string devId = "devId";
        }
        static readonly ActionParamsClass_UpdateDeviceLogUser s_params_UpdateDeviceLogUser = new ActionParamsClass_UpdateDeviceLogUser();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateDeviceLogUser UpdateDeviceLogUserParams { get { return s_params_UpdateDeviceLogUser; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateDeviceLogUser
        {
            public readonly string dlogId = "dlogId";
            public readonly string usrId = "usrId";
        }
        static readonly ActionParamsClass_InsertDeviceLogKontaktUser s_params_InsertDeviceLogKontaktUser = new ActionParamsClass_InsertDeviceLogKontaktUser();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_InsertDeviceLogKontaktUser InsertDeviceLogKontaktUserParams { get { return s_params_InsertDeviceLogKontaktUser; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_InsertDeviceLogKontaktUser
        {
            public readonly string KontaktUserId = "KontaktUserId";
            public readonly string DeviceId = "DeviceId";
        }
        static readonly ActionParamsClass_ListDeviceLogFromUser s_params_ListDeviceLogFromUser = new ActionParamsClass_ListDeviceLogFromUser();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListDeviceLogFromUser ListDeviceLogFromUserParams { get { return s_params_ListDeviceLogFromUser; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListDeviceLogFromUser
        {
            public readonly string grid = "grid";
            public readonly string usrId = "usrId";
        }
        static readonly ActionParamsClass_ListReservationTimes s_params_ListReservationTimes = new ActionParamsClass_ListReservationTimes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListReservationTimes ListReservationTimesParams { get { return s_params_ListReservationTimes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListReservationTimes
        {
            public readonly string grid = "grid";
        }
        static readonly ActionParamsClass_UpdateReservationTimes s_params_UpdateReservationTimes = new ActionParamsClass_UpdateReservationTimes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateReservationTimes UpdateReservationTimesParams { get { return s_params_UpdateReservationTimes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateReservationTimes
        {
            public readonly string id = "id";
            public readonly string oper = "oper";
            public readonly string r = "r";
        }
        static readonly ActionParamsClass_ListReservatorUsers s_params_ListReservatorUsers = new ActionParamsClass_ListReservatorUsers();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListReservatorUsers ListReservatorUsersParams { get { return s_params_ListReservatorUsers; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListReservatorUsers
        {
            public readonly string grid = "grid";
            public readonly string Id = "Id";
        }
        static readonly ActionParamsClass_UpdateisPresent s_params_UpdateisPresent = new ActionParamsClass_UpdateisPresent();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateisPresent UpdateisPresentParams { get { return s_params_UpdateisPresent; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateisPresent
        {
            public readonly string reservid = "reservid";
            public readonly string value = "value";
        }
        static readonly ActionParamsClass_Reservation s_params_Reservation = new ActionParamsClass_Reservation();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Reservation ReservationParams { get { return s_params_Reservation; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Reservation
        {
            public readonly string model = "model";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Devices = "Devices";
                public readonly string Reservation = "Reservation";
                public readonly string ReservationAdmin = "ReservationAdmin";
                public readonly string Users = "Users";
            }
            public readonly string Devices = "~/Views/Stock/Devices.cshtml";
            public readonly string Reservation = "~/Views/Stock/Reservation.cshtml";
            public readonly string ReservationAdmin = "~/Views/Stock/ReservationAdmin.cshtml";
            public readonly string Users = "~/Views/Stock/Users.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_StockController : Tax.Portal.Controllers.StockController
    {
        public T4MVC_StockController() : base(Dummy.Instance) { }

        partial void DevicesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid? KontaktUserId);

        public override System.Web.Mvc.ActionResult Devices(System.Guid? KontaktUserId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Devices);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "KontaktUserId", KontaktUserId);
            DevicesOverride(callInfo, KontaktUserId);
            return callInfo;
        }

        partial void ListDevicesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, JQGrid.Helpers.GridSettings grid);

        public override System.Web.Mvc.JsonResult ListDevices(JQGrid.Helpers.GridSettings grid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListDevices);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "grid", grid);
            ListDevicesOverride(callInfo, grid);
            return callInfo;
        }

        partial void UpdateDevicesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string oper, Tax.Data.Models.Devices d, string DeviceTypeName, string DeviceStatusName);

        public override System.Web.Mvc.ActionResult UpdateDevices(string id, string oper, Tax.Data.Models.Devices d, string DeviceTypeName, string DeviceStatusName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDevices);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "oper", oper);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "d", d);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "DeviceTypeName", DeviceTypeName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "DeviceStatusName", DeviceStatusName);
            UpdateDevicesOverride(callInfo, id, oper, d, DeviceTypeName, DeviceStatusName);
            return callInfo;
        }

        partial void ListDeviceLogFromDeviceOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, JQGrid.Helpers.GridSettings grid, System.Guid? devId);

        public override System.Web.Mvc.JsonResult ListDeviceLogFromDevice(JQGrid.Helpers.GridSettings grid, System.Guid? devId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListDeviceLogFromDevice);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "grid", grid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "devId", devId);
            ListDeviceLogFromDeviceOverride(callInfo, grid, devId);
            return callInfo;
        }

        partial void UpdateDeviceLogFromDeviceOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string oper, Tax.Data.Models.DeviceLog d, string AreaName, System.Guid devId);

        public override System.Web.Mvc.ActionResult UpdateDeviceLogFromDevice(string id, string oper, Tax.Data.Models.DeviceLog d, string AreaName, System.Guid devId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDeviceLogFromDevice);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "oper", oper);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "d", d);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "AreaName", AreaName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "devId", devId);
            UpdateDeviceLogFromDeviceOverride(callInfo, id, oper, d, AreaName, devId);
            return callInfo;
        }

        partial void UpdateDeviceLogUserOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid dlogId, string usrId);

        public override System.Web.Mvc.ActionResult UpdateDeviceLogUser(System.Guid dlogId, string usrId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDeviceLogUser);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dlogId", dlogId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "usrId", usrId);
            UpdateDeviceLogUserOverride(callInfo, dlogId, usrId);
            return callInfo;
        }

        partial void InsertDeviceLogKontaktUserOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid KontaktUserId, System.Guid DeviceId);

        public override System.Web.Mvc.ActionResult InsertDeviceLogKontaktUser(System.Guid KontaktUserId, System.Guid DeviceId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.InsertDeviceLogKontaktUser);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "KontaktUserId", KontaktUserId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "DeviceId", DeviceId);
            InsertDeviceLogKontaktUserOverride(callInfo, KontaktUserId, DeviceId);
            return callInfo;
        }

        partial void UsersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        public override System.Web.Mvc.ActionResult Users()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Users);
            UsersOverride(callInfo);
            return callInfo;
        }

        partial void ListDeviceLogFromUserOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, JQGrid.Helpers.GridSettings grid, string usrId);

        public override System.Web.Mvc.JsonResult ListDeviceLogFromUser(JQGrid.Helpers.GridSettings grid, string usrId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListDeviceLogFromUser);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "grid", grid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "usrId", usrId);
            ListDeviceLogFromUserOverride(callInfo, grid, usrId);
            return callInfo;
        }

        partial void ReservationAdminOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        public override System.Web.Mvc.ActionResult ReservationAdmin()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReservationAdmin);
            ReservationAdminOverride(callInfo);
            return callInfo;
        }

        partial void ListReservationTimesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, JQGrid.Helpers.GridSettings grid);

        public override System.Web.Mvc.JsonResult ListReservationTimes(JQGrid.Helpers.GridSettings grid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListReservationTimes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "grid", grid);
            ListReservationTimesOverride(callInfo, grid);
            return callInfo;
        }

        partial void UpdateReservationTimesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string oper, Tax.Data.Models.ReservationTime r);

        public override System.Web.Mvc.ActionResult UpdateReservationTimes(string id, string oper, Tax.Data.Models.ReservationTime r)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateReservationTimes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "oper", oper);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "r", r);
            UpdateReservationTimesOverride(callInfo, id, oper, r);
            return callInfo;
        }

        partial void ListReservatorUsersOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, JQGrid.Helpers.GridSettings grid, System.Guid? Id);

        public override System.Web.Mvc.JsonResult ListReservatorUsers(JQGrid.Helpers.GridSettings grid, System.Guid? Id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListReservatorUsers);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "grid", grid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Id", Id);
            ListReservatorUsersOverride(callInfo, grid, Id);
            return callInfo;
        }

        partial void UpdateisPresentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string reservid, bool value);

        public override System.Web.Mvc.ActionResult UpdateisPresent(string reservid, bool value)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateisPresent);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "reservid", reservid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "value", value);
            UpdateisPresentOverride(callInfo, reservid, value);
            return callInfo;
        }

        partial void ReservationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        public override System.Web.Mvc.ActionResult Reservation()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Reservation);
            ReservationOverride(callInfo);
            return callInfo;
        }

        partial void ReservationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Tax.Portal.Models.ReservationViewModel model);

        public override System.Web.Mvc.ActionResult Reservation(Tax.Portal.Models.ReservationViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Reservation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ReservationOverride(callInfo, model);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
