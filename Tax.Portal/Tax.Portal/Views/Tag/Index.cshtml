@using Tax.Data.Models;

<div class="modal fade bs-modal-sm" id="warningmodal" tabindex="-1" role="dialog" aria-labelledby="" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header" style="color: orange; font-family: 'FrutigerNextPro-Bold'">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h3 class="modal-title">WARNING!</h3>
            </div>
            <div class="modal-body" style="color:orange">
                <p id="warningtext" style="text-align:center"></p>
            </div>
            <div class="modal-footer">
                <div class="text-center text-center">
                    <input type="button" class="btn btn-warning" data-dismiss="modal" value=" OK " />
                </div>
            </div>
        </div><!-- /.modal-content -->
    </div>
</div>

<div class="modal fade bs-modal-sm" id="errormodal" tabindex="-1" role="dialog" aria-labelledby="" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header" style="color: red; font-family: 'FrutigerNextPro-Bold'">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h3 class="modal-title">ERROR!</h3>
            </div>
            <div class="modal-body" style="color:red">
                <p id="errortext" style="text-align:center"></p>
            </div>
            <div class="modal-footer">
                <div class="text-center text-center">
                    <input type="button" class="btn btn-danger" data-dismiss="modal" value=" OK " />
                </div>
            </div>
        </div><!-- /.modal-content -->
    </div>
</div>

<div class="modal fade bs-modal-sm" id="createmodal" tabindex="-1" role="dialog" aria-labelledby="" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header" style="background: #00A1dE; color: #313131; font-family 'FrutigerNextPro-Bold'; ">                
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h3 class="modal-title">Add tag</h3>
            </div>
            <div class="modal-body" style="height:200px">
                <div id="customvalidation" class="validation-summary-errors" data-valmsg-summary="true" style="display:none">
                    <div id="message"></div>
                </div>
                <div class="col-sm-12 col-xs-12">
                    @Html.Label("New tag on english")
                </div>
                <div class="col-sm-12 col-xs-12">
                    @Html.TextBox("NewtagNameEn", "", new { @class = "form-control", @placeholder = "Type here a name of new tag on english" })
                </div>
                <div class="col-sm-12 col-xs-12" style="padding-top:10px">
                    @Html.Label("New tag on hungarian")
                </div>
                <div class="col-sm-12 col-xs-12">
                    @Html.TextBox("NewtagNameHu", "", new { @class = "form-control", @placeholder = "Type here a name of new tag on hungarian" })
                </div>
            </div>
            <div class="modal-footer">
                <div class="text-center pull-left">
                    <input type="button" class="btn btn-default" data-dismiss="modal" value=" BACK " />
                </div>
                <div class="text-center pull-right">
                    <input id="createbutton" type="button" class="btn btn-default" value=" SAVE " />
                </div>
            </div>
        </div><!-- /.modal-content -->
    </div>
</div>

<div class="modal fade bs-modal-sm" id="deletemodal" tabindex="-1" role="dialog" aria-labelledby="" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header" style="background: #00A1dE; color: #313131; font-family 'FrutigerNextPro-Bold'; ">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h3 class="modal-title">ATTENTION!</h3>
            </div>
            <div class="modal-body">
                <p id="deletetext" style="text-align:center">Do you really want to delete this?</p>
            </div>
            <div class="modal-footer">
                <div class="text-center pull-left">
                    <input type="button" class="btn btn-default" data-dismiss="modal" value=" CANCEL " />
                </div>
                <div class="text-center pull-right">
                    <input id="deletebutton" type="button" class="btn btn-default" data-dismiss="modal" value=" DELETE " />
                </div>
            </div>
        </div><!-- /.modal-content -->
    </div>
</div>

<div class="row">    
    <div class="container grid">
        <div class="col-sm-12">
            <div class=" col-sm-12 col-xs-12" style="padding-left:0px">
                <div class="btn-group">
                    <a id="create" class="fa fa-plus fa-lg" style="padding-left:5px; padding-right:5px" data-toggle="modal" data-target="#createmodal"></a>
                    <a id="del" class="fa fa-trash-o fa-lg" style="visibility:hidden; padding-right:5px" data-toggle="modal" data-target="#deletemodal"></a>
                </div>
                <table id="tags" class="display"><tr><td /></tr></table>
                <div id="tagspager"></div>
            </div>
        </div>
    </div>
</div>

<input id="rowid" style="visibility: hidden" /> 

@section Scripts {
    @Scripts.Render("~/Scripts/jqgrid")

<script type="text/javascript">
    var getColumnIndexByName = function (gridname, columnName) {
        var grid = $("#" + gridname);
        var cm = grid.jqGrid('getGridParam', 'colModel');
        var retval = -1;
        $.each(cm, function () {
            if (this.name === columnName) {
                retval = cm.indexOf(this);
            }
        });
        return retval;
    };

    numberSearchOptions = ['eq', 'ne', 'lt', 'le', 'gt', 'ge'];// 'nu', 'nn', 'in', 'ni'],

    numberTemplate = {
        formatter: 'integer', align: 'right', sorttype: 'number',
        searchoptions: { searchhidden: true, sopt: numberSearchOptions }
    };

    myDefaultSearch = 'cn';

    var ids = [];

    jQuery("#tags").jqGrid({
        url: '@Url.Action("ListTags", "Tag")',
        editurl: '@Url.Action("Edit", "Tag")',
        datatype: "json",
        ajaxSelectOptions: { type: "GET" }, //ezzel megy a lenyíló az advanced search-ben
        loadError: function (jqXHR, textStatus, errorThrown) {
            $('#errortext').text(jqXHR.responseText);
            $('#errormodal').modal({ show: true });
        },
        colNames: [
            'Action'
            , 'id'
            , 'ENG'
            , 'HUN'
        ],
        colModel: [
            {
                name: "act"
                , index: "act"
                , formatter: "actions"
                , formatoptions: {
                    keys: false, editbutton: true, delbutton: false,
                    afterSave: function () {
                        $("#tags").trigger("reloadGrid", [{ current: true }]);
                    },
                    afterRestore: function () {
                        $("#tags").trigger("reloadGrid", [{ current: true }]);
                    },
                    onError: function (jqXHR, textStatus, errorThrown) {
                        $('#errortext').text(jqXHR.responseText);
                        $('#errormodal').modal({ show: true });
                    }
                }
                , width: 50
                , sortable: false
                , search: false
            },
            { name: 'Id', index: 'Id', hidden: true }, //nem látszik, nem kereshető, nem vihető fel
            {
                name: 'NameEn', index: 'NameEn', width: 300, align: "left", hidden: false,
                sortable: true, search: true, editable: true,// edittype: "textarea",
                cellattr: function (rowId, tv, rawObject, cm, rdata) { return 'style="white-space: normal;"' },
                //formatter: function (v) { return '<div style="max-height: 100px">' + v + '</div>'; }
            },
            {
                name: 'NameHu', index: 'NameHu', width: 300, align: "left", hidden: false,
                sortable: true, search: true, editable: true,// edittype: "textarea",
                cellattr: function (rowId, tv, rawObject, cm, rdata) { return 'style="white-space: normal;"' },
                //formatter: function (v) { return '<div style="max-height: 100px">' + v + '</div>'; }
            }
        ],
        rowNum: 20,
        rowList: [20, 40, 60],
        toppager: true,
        pager: '#tagspager',
        sortname: 'NameEn',
        viewrecords: true,
        sortorder: "asc",
        caption: 'Tags',
        rownumbers: false,
        gridview: true,
        hoverrows: true,
        scrollrows: true,
        shrinkToFit: false,
        height: '100%',
        width: '650',
        //autowidth: true,
        onSelectRow: function (rowid) {
            $("#rowid").val(rowid);
            $("#del").show().css({ visibility: "visible" });
        },
        loadComplete: function () {
            $("#del").hide().css({ visibility: "hidden" });
        }
    });

    jQuery("#tags").jqGrid('navGrid', '#tagsspager'
        , { edit: false, add: false, del: false, refresh: true, cloneToTop: true }
        , {} //prmedit
        , {} //prmadd
        , {} //prmdel
        , {
            width: 600,
            multiplesearch: true,
            recreatefilter: true,
            closeonescape: true,
            closeaftersearch: true,
            overlay: 0,
            afterredraw: function () {
                $('input.add-rule', this)//.button().val('add new rule')
                    .attr('title', 'add new search rule');
                $('input.delete-rule', this)//.button().val('delete rule')
                    .attr('title', 'delete rule');
            }
        } //prmsearch
        , {} //prmview
    )
    .jqGrid('filterToolbar', { stringResult: true, searchOnEnter: true, defaultSearch: "cn" })

    jQuery("#tags").bind("jqGridInlineSuccessSaveRow",
        function (e, jqXHR, rowid, options) {
            var str = JSON.parse(jqXHR.responseText);
            if (!str.success) {
                if (str.error) {
                    $('#errortext').text(str.response);
                    $('#errormodal').modal({ show: true });
                }
                else {
                    $('#warningtext').text(str.response);
                    $('#warningmodal').modal({ show: true });
                }
            }
            return [true, jqXHR.responseText];
        }
    );

    $('#deletebutton').click(function () {
        $.ajax({
            url: '@Url.Action("DeleteTag", "Tag")?id=' + $("#rowid").val(),
            type: 'POST',
            beforeSend: function (jqXHR, textStatus) { jQuery('#tags').block({ message: '<h3>Wait…</h3>' }); },
            complete: function (jqXHR, textStatus) {
                var str = JSON.parse(jqXHR.responseText);
                if (!str.success) {
                    if (str.error) {
                        $('#errortext').text(str.response);
                        $('#errormodal').modal({ show: true });
                    }
                    else {
                        $('#warningtext').text(str.response);
                        $('#warningmodal').modal({ show: true });
                    }
                }
                jQuery('#tags').unblock();
                $("#tags").trigger("reloadGrid", [{ current: true }]);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                $('#errortext').text(jqXHR.responseText);
                $('#errormodal').modal({ show: true });
            }
        });
    });

    $('#createbutton').click(function () {
        $.ajax({
            url: '@Url.Action("Create", "Tag")?NameEn=' + $("#NewtagNameEn").val() + '&NameHu=' + $("#NewtagNameHu").val(),
            type: 'POST',
            beforeSend: function (jqXHR, textStatus) {
                jQuery('#tags').block({ message: '<h3>Wait…</h3>' });
            },
            complete: function (jqXHR, textStatus) {
                var str = JSON.parse(jqXHR.responseText);
                if (!str.success) {
                    $('#message').text(str.response)
                    $('#customvalidation').show().css({ visibility: "visible" });
                }
                else
                {
                    $("#customvalidation").hide().css({ visibility: "hidden" });
                    $('#createmodal').modal('hide');
                }
                jQuery('#tags').unblock();
                $("#tags").trigger("reloadGrid", [{ current: true }]);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                $('#errortext').text(jqXHR.responseText);
                $('#errormodal').modal({ show: true });
            }
        });
    });

    $("#createmodal").on("hide.bs.modal", function () {
        $("#customvalidation").hide().css({ visibility: "hidden" });
        $('#NewtagNameEn').val('');
        $('#NewtagNameHu').val('');
    });

    </script>

}