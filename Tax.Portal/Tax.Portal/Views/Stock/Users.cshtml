@{
    ViewBag.Title = "Eszközök követése ügyfelenként";
}

<style type="text/css">
    .ui-jqgrid .ui-state-highlight {
        background: #cccccc;
    }
    /*nem tudom a web lapon customizálni*/
    .container .grid {
        border: 1px solid #ddd;
        padding-left: 0px;
        padding-top: 15px;
        padding-right: 0px;
        padding-bottom: 15px;
        margin-left: 0px;
        margin-top: 0px;
        margin-right: 0px;
        margin-bottom: 0px;
    }
</style>

<h2>@ViewBag.Title</h2>

<div class="row">
    <div class="container grid">
        <div class="col-sm-7 col-xs-12" style="min-width: 500px">
            <table id="users" class="display"><tr><td /></tr></table>
            <div id="userspager"></div>
        </div>
        <div class="col-sm-5 col-xs-12" style="min-width: 460px">
            <table id="devicelogs" class="display"><tr><td /></tr></table>
            <div id="devicelogspager"></div>
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/Scripts/jqgrid")

    <script type="text/javascript">

        var SelectedUserID = null;

        var getColumnIndexByName = function (gridname, columnName) {
            var grid = $("#" + gridname);
            var cm = grid.jqGrid('getGridParam', 'colModel');
            var retval = -1;
            $.each(cm, function () {
                if (this.name === columnName) {
                    retval = cm.indexOf(this);
                }
            });
            return retval;
        };

        jQuery("#users").jqGrid({
            url: '@Url.Action("ListUsers", "Admin")',
            datatype: "json",
            colNames: [
                'Műveletek'
                , 'id'
                , 'Új telko?'
                , 'Belépési név'
                , 'Felhasználó neve'
                , 'Email'
                , 'Évényes?'
                , 'Kizárva?'
                , 'SINOSZ?'
                , 'Telko?'
                , 'Eszköz?'
            ],
            colModel: [
                {
                    "name": "act"
                    , "formatoptions": { "keys": false, "editbutton": true, "delbutton": false }
                    , "width": 50
                    , "formatter": "actions"
                    , "searchoptions": {}
                    , "index": "act"
                    , sortable: false
                    , search: false
                    , hidden: true
                },
                { name: 'Id', index: 'Id', hidden: true, sortable: false, editable: false },
                {
                    name: 'isFreshForPBX', index: 'isFreshForPBX', width: 45, align: "center", editable: false,
                    edittype: 'checkbox', editoptions: { value: "True:False" },
                    searchoptions: { sopt: ['eq'], value: '"":Mind;True:Aktív;False:Inaktív' }, stype: 'select',
                    formatter: "checkbox", formatoptions: { disabled: true }, sortable: true
                },
                { name: 'UserName', index: 'UserName', width: 90, align: "left", editable: false, sortable: true },
                { name: 'Name', index: 'Name', width: 150, align: "left", editable: false, sortable: true },
                { name: 'Email', index: 'Email', width: 120, align: "left", editable: false, sortable: true },
                {
                    name: 'isEmailValidated', index: 'isEmailValidated', width: 45, align: "center", editable: true,
                    edittype: 'checkbox', editoptions: { value: "True:False" },
                    searchoptions: { sopt: ['eq'], value: '"":Mind;True:Aktív;False:Inaktív' }, stype: 'select',
                    formatter: "checkbox", formatoptions: { disabled: true }, sortable: true
                },
                {
                    name: 'isLocked', index: 'isLocked', width: 45, align: "center", editable: true,
                    edittype: 'checkbox', editoptions: { value: "True:False" },
                    searchoptions: { sopt: ['eq'], value: '"":Mind;True:Aktív;False:Inaktív' }, stype: 'select',
                    formatter: "checkbox", formatoptions: { disabled: true }, sortable: true
                },
                {
                    name: 'isSinoszMember', index: 'isSinoszMember', width: 45, align: "center", editable: false,
                    searchoptions: { sopt: ['eq'], value: '"":Mind;True:Aktív;False:Inaktív' }, stype: 'select',
                    formatter: "checkbox", formatoptions: { disabled: true }, sortable: true
                },
                {
                    name: 'isCommunicationRequested', index: 'isCommunicationRequested', width: 45, align: "center", editable: false,
                    searchoptions: { sopt: ['eq'], value: '"":Mind;True:Aktív;False:Inaktív' }, stype: 'select',
                    formatter: "checkbox", formatoptions: { disabled: true }, sortable: true
                },
                {
                    name: 'isDeviceReqested', index: 'isDeviceReqested', width: 45, align: "center", editable: false,
                    searchoptions: { sopt: ['eq'], value: '"":Mind;True:Aktív;False:Inaktív' }, stype: 'select',
                    formatter: "checkbox", formatoptions: { disabled: true }, sortable: true
                }
                //
            ],
            rowNum: 30,
            rowList: [30, 60, 90],
            toppager: true,
            pager: '#userspager',
            sortname: 'UserName',
            viewrecords: true,
            sortorder: "asc",
            caption: 'Felhasználók',
            rownumbers: true,
            gridview: true,
            hoverrows: true,
            scrollrows: false,
            shrinkToFit: false,
            height: '100%',
            width: '660',
            onSelectRow: function (rowid, e) {
                SelectedUserID = rowid;
                jQuery("#devicelogs").setCaption($(this).getCell(rowid, 'Name') + ' eszközei:');
                jQuery("#devicelogs").jqGrid('setGridParam', {
                    search: "False",
                    page: 1,
                    url: '@Url.Action("ListDeviceLogFromUser", "Stock")?usrId=' + rowid,
                    editurl: null
                }).trigger("reloadGrid");
            },
            loadComplete: function () {
                $("#chooser").hide().css({ visibility: "hidden" });
                SelectedUserID = null;
                jQuery("#devicelogs").setCaption('Eszközök');
                jQuery("#devicelogs").jqGrid('setGridParam', {
                    search: "False",
                    page: 1,
                    url: '@Url.Action("ListDeviceLogFromUser", "Stock")',
                    editurl: null
                }).trigger("reloadGrid", [{ current: true }]);
            }
        });

        jQuery("#users").jqGrid('navGrid', '#userspager'
            , { edit: false, add: false, del: false, refresh: true, cloneToTop: true }
            , {} //prmEdit
            , {} //prmAdd
            , {} //prmDel
            , {
                width: 550,
                multipleSearch: true,
                //multipleGroup: true,
                recreateFilter: true,
                //closeOnEscape: true,
                //closeAfterSearch: true,
                overlay: 0,
                afterRedraw: function () {
                    $('input.add-rule', this)//.button().val('Add new rule')
                        .attr('title', 'Új szabály hozzáadása');
                    //$('input.add-group', this)//.button().val('Add new group or rules')
                    //    .attr('title', 'Új szabálycsoport hozzáadása');
                    $('input.delete-rule', this)//.button().val('Delete rule')
                        .attr('title', 'Szabály törlése');
                    //$('input.delete-group', this)//.button().val('Delete group')
                    //    .attr('title', 'Szabálycsoport törlése');
                    //$(this).find("table.group:not(:first)").css({
                    //    borderWidth: "1px",
                    //    borderStyle: "dashed"
                    //});
                }
            } //prmSearch
            , {} //prmView
        ).jqGrid('filterToolbar', { stringResult: true, searchOnEnter: true, defaultSearch: "cn" });

        initDateSearch = function (elem) {
            setTimeout(function () {
                $(elem).datepicker({
                    autoSize: true,
                    //showOn: 'button', // it dosn't work in searching dialog
                    changeYear: true,
                    changeMonth: true,
                    showButtonPanel: true,
                    showWeek: true,
                    onSelect: function () {
                        if (this.id.substr(0, 3) === "gs_") {
                            setTimeout(function () {
                                $("#devicelogs")[0].triggerToolbar();
                            }, 50);
                        } else {
                            // to refresh the filter
                            $(this).trigger('change');
                        }
                    }
                });
            }, 100);
        };

        function datetimecheck(value, colname) {
            if (value.length != 10)
                return [false, "Nem megfelelő a dátum hossza (YYYY.mm.DD)!"];
            var dateParts = value.split(".");
            var dat = new Date(dateParts[0], dateParts[1] - 1, dateParts[2]);
            if (dat.getDate() != parseInt(dateParts[2]) || dat.getMonth() != parseInt(dateParts[1] - 1) || dat.getFullYear() != dateParts[0])
                return [false, "Nem megfelelő dátum (YYYY.mm.DD)!"];
            var min = new Date("1753.01.01");
            var max = new Date("9999.12.31");
            if (dat < min || dat > max)
                return [false, "Csak 1753.01.01 és 9999.12.31 közti érték adható!"];
            return [true, ""];
        }

        jQuery("#devicelogs").jqGrid({
            url: '@Url.Action("ListDeviceLogFromUser", "Stock")',//load
            editurl: null,
            datatype: "json",
            colNames: [
                'id'
                , 'Vált. ideje'
                , 'Gyári sorozatszám'
                , 'Megnevezés'
                , 'Állapot'
            ],
            colModel: [
                { name: 'Id', index: 'Id', hidden: true, sortable: false, editable: false },
                {
                    name: 'DeviceLogDate', index: 'DeviceLogDate', width: 70, align: "left",
                    hidden: false, sortable: true, sorttype: 'date',
                    editable: true, editoptions: { dataInit: initDateSearch }, editrules: { custom: true, custom_func: datetimecheck },
                    formatter: 'date', formatoptions: { srcformat: 'Y-m-d', newformat: 'Y.m.d' },
                    search: true, searchoptions: { sopt: ['eq', 'ne', 'lt', 'le', 'gt', 'ge'], dataInit: initDateSearch }, searchrules: { custom: true, custom_func: datetimecheck }
                },
                { name: 'DeviceId', index: 'DeviceId', width: 110, align: "left", editable: false, sortable: true },
                { name: 'DeviceName', index: 'DeviceName', width: 180, align: "left", editable: false, sortable: true },
                { name: 'DeviceStatusName', index: 'DeviceStatusName', width: 80, align: "left", editable: false, sortable: true },
            ],
            rowNum: 20,
            rowList: [20, 40, 60],
            toppager: true,
            pager: '#devicelogspager',
            //sortname: 'DeviceLogDate',
            viewrecords: true,
            //sortorder: "asc",
            caption: 'Eszközök',
            rownumbers: true,
            gridview: true,
            hoverrows: true,
            scrollrows: false,
            shrinkToFit: false,
            height: '100%',
            width: '460',
        
        });

        jQuery("#devicelogs").jqGrid('navGrid', '#devicelogspager'
        , { edit: false, add: false, del: false, refresh: true, cloneToTop: true }
        , {} //prmEdit
        , {} //prmAdd
        , {} //prmDel
        , {
            width: 550,
            multipleSearch: true,
            //multipleGroup: true,
            recreateFilter: true,
            //closeOnEscape: true,
            //closeAfterSearch: true,
            overlay: 0,
            afterRedraw: function () {
                $('input.add-rule', this)//.button().val('Add new rule')
                    .attr('title', 'Új szabály hozzáadása');
                //$('input.add-group', this)//.button().val('Add new group or rules')
                //    .attr('title', 'Új szabálycsoport hozzáadása');
                $('input.delete-rule', this)//.button().val('Delete rule')
                    .attr('title', 'Szabály törlése');
                //$('input.delete-group', this)//.button().val('Delete group')
                //    .attr('title', 'Szabálycsoport törlése');
                //$(this).find("table.group:not(:first)").css({
                //    borderWidth: "1px",
                //    borderStyle: "dashed"
                //});
            }
        } //prmSearch
        , {} //prmView
        ).jqGrid('filterToolbar', { stringResult: true, searchOnEnter: true, defaultSearch: "cn" });

    </script>


}

