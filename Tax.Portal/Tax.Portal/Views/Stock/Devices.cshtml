@{
    ViewBag.Title = "Készlet-kezelés";
}

<style type="text/css">
    .ui-jqgrid .ui-state-highlight {
        background: #cccccc;
    }
    /*nem tudom a web lapon customizálni*/
    .container .grid {
        border: 1px solid #ddd;
        padding-left: 0px;
        padding-top: 15px;
        padding-right: 0px;
        padding-bottom: 15px;
        margin-left: 0px;
        margin-top: 0px;
        margin-right: 0px;
        margin-bottom: 0px;
    }
    .modal-dialog {
        width: 700px; /* your width */
        height: auto;
    }
</style>

<h2>@ViewBag.Title</h2>

<input id="KontaktUserId" value="@ViewBag.KontaktUserId" style="visibility:hidden"/>

<div class="modal fade bs-modal-sm" id="warningmodal" tabindex="-1" role="dialog" aria-labelledby="" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header" style="color:orange">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">FIGYELEM!</h4>
            </div>
            <div class="modal-body" style="color:orange">
                <p id="warningtext" style="text-align:center"></p>
            </div>
            <div class="modal-footer">
                <div class="text-center text-center">
                    <input type="button" class="btn btn-warning" data-dismiss="modal" value=" RENDBEN " />
                </div>
            </div>
        </div><!-- /.modal-content -->
    </div>
</div>

<div class="modal fade bs-modal-sm" id="errormodal" tabindex="-1" role="dialog" aria-labelledby="" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header" style="color:red">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">HIBA TÖRTÉNT!</h4>
            </div>
            <div class="modal-body" style="color:red">
                <p id="errortext" style="text-align:center"></p>
            </div>
            <div class="modal-footer">
                <div class="text-center text-center">
                    <input type="button" class="btn btn-danger" data-dismiss="modal" value=" RENDBEN " />
                </div>
            </div>
        </div><!-- /.modal-content -->
    </div>
</div>

<div class="col-sm-3 col-xs-12 pull-right">
    <input type="button" id="fromreserv" class="btn btn-default" value="Választott eszköz hozzárendelése" />
</div>

<div class="modal fade bs-modal-lg" id="device" tabindex="-1" role="dialog" aria-labelledby="" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Felhasználóválasztás</h4>
            </div>
            <div class="modal-body">
                <table id="users" class="display"><tr><td /></tr></table>
                <div id="userspager"></div>
            </div>
            <div class="modal-footer">
                <input id="chooser" type="button" class="btn btn-warning" data-dismiss="modal" value=" Választott ügyfél rögzítése " />
            </div>
        </div><!-- /.modal-content -->
    </div>
</div>

<div class="row">
    <div class="container grid">
        <div class="col-sm-6 col-xs-12" style="min-width: 570px">
                <table id="devices" class="display"><tr><td /></tr></table>
                <div id="devicespager"></div>
        </div>
        <div class="col-sm-6 col-xs-12" style="min-width: 560px">
            <div>
                <table id="devicelogs" class="display"><tr><td /></tr></table>
                <div id="devicelogspager"></div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/Scripts/jqgrid")

    <script type="text/javascript">
    $("#chooser").hide().css({ visibility: "hidden" });

    var SelectedUserID = null;

    $("#fromreserv").hide().css({ visibility: "hidden" });

    $('#fromreserv').click(function () {
        $.ajax({
            url: '@Url.Action("InsertDeviceLogKontaktUser", "Stock")?KontaktUserId=' + $('#KontaktUserId').val() + '&DeviceId=' + SelectedDeviceID,
            type: 'POST',
            beforeSend: function (jqXHR, textStatus) { $("#devicelogs").block({ message: '<h3>Betöltés…</h3>' }); },
            complete: function (jqXHR, textStatus) {
                var str = JSON.parse(jqXHR.responseText);
                if (!str.success) {
                    if (str.error) {
                        $('#errortext').text(str.response);
                        $('#errormodal').modal({ show: true });
                    }
                    else {
                        $('#warningtext').text(str.response);
                        $('#warningmodal').modal({ show: true });
                    }
                }
                $("#devicelogs").unblock();
                $("#devicelogs").trigger("reloadGrid", [{ current: true }]);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                //alert(textStatus); alert(errorThrown);
                $('#errortext').text(jqXHR.responseText);
                $('#errormodal').modal({ show: true });
            }
        });
    });

    $('#chooser').click(function () {
        $.ajax({
            url: '@Url.Action("UpdateDeviceLogUser", "Stock")?dlogId=' + SelectedDeviceLogID + '&usrId=' + SelectedUserID,
            type: 'POST',
            beforeSend: function (jqXHR, textStatus) { $("#devicelogs").block({ message: '<h3>Betöltés…</h3>' }); },
            complete: function (jqXHR, textStatus) {
                var str = JSON.parse(jqXHR.responseText);
                if (!str.success)
                {
                    if (str.error) {
                        $('#errortext').text(str.response);
                        $('#errormodal').modal({ show: true });
                    }
                    else
                    {
                        $('#warningtext').text(str.response);
                        $('#warningmodal').modal({ show: true });
                    }
                }
                $("#devicelogs").unblock();
                $("#devicelogs").trigger("reloadGrid", [{ current: true }]);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                //alert(textStatus); alert(errorThrown);
                $('#errortext').text(jqXHR.responseText);
                $('#errormodal').modal({ show: true });
            }
        });
    });

    jQuery("#users").jqGrid({
        url: '@Url.Action("ListUsers", "Admin")',
        datatype: "json",
        colNames: [
            'Műveletek'
            , 'id'
            , 'Új telko?'
            , 'Belépési név'
            , 'Felhasználó neve'
            , 'Email'
            , 'Évényes?'
            , 'Kizárva?'
            , 'SINOSZ?'
            , 'Telko?'
            , 'Eszköz?'
        ],
        colModel: [
            {
                "name": "act"
                , "formatoptions": { "keys": false, "editbutton": true, "delbutton": false }
                , "width": 50
                , "formatter": "actions"
                , "searchoptions": {}
                , "index": "act"
                , sortable: false
                , search: false
                , hidden: true
            },
            { name: 'Id', index: 'Id', hidden: true, sortable: false, editable: false },
            {
                name: 'isFreshForPBX', index: 'isFreshForPBX', width: 45, align: "center", editable: false,
                edittype: 'checkbox', editoptions: { value: "True:False" },
                searchoptions: { sopt: ['eq'], value: '"":Mind;True:Aktív;False:Inaktív' }, stype: 'select',
                formatter: "checkbox", formatoptions: { disabled: true }, sortable: true
            },
            { name: 'UserName', index: 'UserName', width: 90, align: "left", editable: false, sortable: true },
            { name: 'Name', index: 'Name', width: 150, align: "left", editable: false, sortable: true },
            { name: 'Email', index: 'Email', width: 120, align: "left", editable: false, sortable: true },
            {
                name: 'isEmailValidated', index: 'isEmailValidated', width: 45, align: "center", editable: true,
                edittype: 'checkbox', editoptions: { value: "True:False" },
                searchoptions: { sopt: ['eq'], value: '"":Mind;True:Aktív;False:Inaktív' }, stype: 'select',
                formatter: "checkbox", formatoptions: { disabled: true }, sortable: true
            },
            {
                name: 'isLocked', index: 'isLocked', width: 45, align: "center", editable: true,
                edittype: 'checkbox', editoptions: { value: "True:False" },
                searchoptions: { sopt: ['eq'], value: '"":Mind;True:Aktív;False:Inaktív' }, stype: 'select',
                formatter: "checkbox", formatoptions: { disabled: true }, sortable: true
            },
            {
                name: 'isSinoszMember', index: 'isSinoszMember', width: 45, align: "center", editable: false,
                searchoptions: { sopt: ['eq'], value: '"":Mind;True:Aktív;False:Inaktív' }, stype: 'select',
                formatter: "checkbox", formatoptions: { disabled: true }, sortable: true
            },
            {
                name: 'isCommunicationRequested', index: 'isCommunicationRequested', width: 45, align: "center", editable: false,
                searchoptions: { sopt: ['eq'], value: '"":Mind;True:Aktív;False:Inaktív' }, stype: 'select',
                formatter: "checkbox", formatoptions: { disabled: true }, sortable: true
            },
            {
                name: 'isDeviceReqested', index: 'isDeviceReqested', width: 45, align: "center", editable: false,
                searchoptions: { sopt: ['eq'], value: '"":Mind;True:Aktív;False:Inaktív' }, stype: 'select',
                formatter: "checkbox", formatoptions: { disabled: true }, sortable: true
            }
            //
        ],
        rowNum: 10,
        rowList: [10, 20, 30],
        toppager: true,
        pager: '#userspager',
        sortname: 'UserName',
        viewrecords: true,
        sortorder: "asc",
        caption: 'Ügyfél választása',
        rownumbers: true,
        gridview: true,
        hoverrows: true,
        scrollrows: false,
        shrinkToFit: false,
        height: '100%',
        width: '660',
        onSelectRow: function (rowid, e) {
            $("#chooser").show().css({ visibility: "visible" });
            SelectedUserID = rowid;
        },
        loadComplete: function () {
            $("#chooser").hide().css({ visibility: "hidden" });
        }
    });

    jQuery("#users").jqGrid('navGrid', '#userspager'
        , { edit: false, add: false, del: false, refresh: true, cloneToTop: true, search: false } //mert kilép a modalból
        , {} //prmEdit
        , {} //prmAdd
        , {} //prmDel
        , {} //prmSearch
        , {} //prmView
    ).jqGrid('filterToolbar', { stringResult: true, searchOnEnter: true, defaultSearch: "cn" })

    var SelectedDeviceID = null;

    var getColumnIndexByName = function (gridname, columnName) {
        var grid = $("#" + gridname);
        var cm = grid.jqGrid('getGridParam', 'colModel');
        var retval = -1;
        $.each(cm, function () {
            if (this.name === columnName) {
                retval = cm.indexOf(this);
            }
        });
        return retval;
    };

    jQuery("#devices").jqGrid({
        url: '@Url.Action("ListDevices", "Stock")',
        editurl: '@Url.Action("UpdateDevices", "Stock")',
        datatype: "json",
        colNames: [
            'Műveletek'
            , 'id'
            , 'Gyári sorozatszám'
            , 'Nyilvántartási szám'
            , 'Típus'
            , 'Megnevezés'
            , 'Állapot'
            , 'cntMax'
        ],
        colModel: [
            {
                name: "act"
                , formatoptions: { "keys": false, "editbutton": true, "delbutton": true }
                , width: 50
                , formatter: "actions"
                , searchoptions: {}
                , index: "act"
                , sortable: false
                , search: false
                , hidden: false
            },
            { name: 'Id', index: 'Id', hidden: true, sortable: false, editable: false },
            { name: 'DeviceId', index: 'DeviceId', width: 110, align: "left", editable: true, sortable: true },
            { name: 'AccountingId', index: 'AccountingId', width: 110, align: "left", editable: true, sortable: true },
            {
                name: 'DeviceTypeName', index: 'DeviceTypeName', width: 60, align: "left", editable: true, sortable: true, edittype: 'select',
                editoptions: {
                    dataUrl: '@Url.Action("ListDeviceTypes", "Stock")',
                    buildSelect: function (result) { return result; },
                    NullIfEmpty: true
                }
            },
            { name: 'DeviceName', index: 'DeviceName', width: 150, align: "left", editable: true, sortable: true },
            {
                name: 'DeviceStatusName', index: 'DeviceStatusName', width: 60, align: "left", editable: true, sortable: true, edittype: 'select',
                editoptions: {
                    dataUrl: '@Url.Action("ListDeviceStatus", "Stock")',
                    buildSelect: function (result) { return result; },
                    NullIfEmpty: true
                }
            },
            { name: 'cntMax', index: 'cntMax', hidden: true, sortable: false, editable: false }
        ],
        rowNum: 30,
        rowList: [30, 60, 90],
        toppager: true,
        pager: '#devicespager',
        //sortname: 'AccountingId',
        viewrecords: true,
        //sortorder: "asc",
        caption: 'Eszközök',
        rownumbers: true,
        gridview: true,
        hoverrows: true,
        scrollrows: false,
        shrinkToFit: false,
        height: '100%',
        width: '570',
        onSelectRow: function (rowid, e) {
            SelectedDeviceID = rowid;
            if ("" != $('#KontaktUserId').val())
            {
                $("#fromreserv").show().css({ visibility: "visible" })
            }
            jQuery("#devicelogs").setCaption($(this).getCell(rowid, 'DeviceId') + ' kezelői:');
            jQuery("#devicelogs").jqGrid('setGridParam', {
                search: "False",
                page: 1,
                url: '@Url.Action("ListDeviceLogFromDevice", "Stock")?devId=' + rowid,
                editurl: '@Url.Action("UpdateDeviceLogFromDevice", "Stock")?devId=' + rowid,//select master => change slave update url
            }).trigger("reloadGrid");
        },
        loadComplete: function () {
            SelectedDeviceID = null;
            $("#fromreserv").hide().css({ visibility: "hidden" });
            jQuery("#devicelogs").setCaption('Kezelők');
            jQuery("#devicelogs").jqGrid('setGridParam', {
                search: "False",
                page: 1,
                url: '@Url.Action("ListDeviceLogFromDevice", "Stock")',
                editurl: null
            }).trigger("reloadGrid", [{ current: true }]);
            var ids = jQuery("#devices").getDataIDs();
            for (var i = 0; i < ids.length; i++) {
                if (jQuery("#devices").getCell(ids[i], 'cntMax') == '0') {
                    $("tr#" + $.jgrid.jqID(ids[i]) + " div.ui-inline-del").show();
                }
                else {
                    $("tr#" + $.jgrid.jqID(ids[i]) + " div.ui-inline-del").hide();
                };
            }
        }
    });

    jQuery("#devices").jqGrid('navGrid', '#devicespager'
        , { edit: false, add: true, del: false, refresh: true, cloneToTop: true }
        , {} //prmEdit
        , { width: 400, recreateForm: true, closeAfterAdd: true } //prmAdd
        , {} //prmDel
        , {
            width: 550,
            multipleSearch: true,
            //multipleGroup: true,
            recreateFilter: true,
            //closeOnEscape: true,
            //closeAfterSearch: true,
            overlay: 0,
            afterRedraw: function () {
                $('input.add-rule', this)//.button().val('Add new rule')
                    .attr('title', 'Új szabály hozzáadása');
                //$('input.add-group', this)//.button().val('Add new group or rules')
                //    .attr('title', 'Új szabálycsoport hozzáadása');
                $('input.delete-rule', this)//.button().val('Delete rule')
                    .attr('title', 'Szabály törlése');
                //$('input.delete-group', this)//.button().val('Delete group')
                //    .attr('title', 'Szabálycsoport törlése');
                //$(this).find("table.group:not(:first)").css({
                //    borderWidth: "1px",
                //    borderStyle: "dashed"
                //});
            }
        } //prmSearch
        , {} //prmView
    ).jqGrid('filterToolbar', { stringResult: true, searchOnEnter: true, defaultSearch: "cn" });

    var SelectedDeviceLogID = null;

    function buttonFormatter(cellvalue, options, rowObject) {
        if (rowObject[getColumnIndexByName('devicelogs', 'AreaName') - 1] == "Ügyfél") //ha ügyfél a kezelő
        {
            return '<input type="button" class="btn btn-primary" data-toggle="modal" data-target=".bs-modal-lg" value="' + cellvalue + '">'
        } else {
            return ''
        }
    }
    
    function reloadgrid() {
        setTimeout(function () {
            $("#devicelogs").trigger("reloadGrid", [{ current: true }]);
        }, 50);       
        $("#devicelogs").jqGrid('setColProp', 'AreaName', { widthOrg: 100 });
        $("#devicelogs").jqGrid('setColProp', 'Remark', { widthOrg: 160 });
        $("#devicelogs").showCol("Name");
        $("#devicelogs").jqGrid('setGridWidth', 560, true);
    }

    function hidecol() {
        $("#devicelogs").jqGrid('setColProp', 'AreaName', { widthOrg: 150 });
        $("#devicelogs").jqGrid('setColProp', 'Remark', { widthOrg: 250 });
        $("#devicelogs").hideCol("Name");
        $("#devicelogs").jqGrid('setGridWidth', 560, true);
        $("input[name='DeviceLogDate']").blur();//belépve feljöjjön a datepicker
    }

    initDateSearch = function (elem) {
        setTimeout(function () {
            $(elem).datepicker({
                autoSize: true,
                //showOn: 'button', // it dosn't work in searching dialog
                changeYear: true,
                changeMonth: true,
                showButtonPanel: true,
                showWeek: true,
                onSelect: function () {
                    if (this.id.substr(0, 3) === "gs_") {
                        setTimeout(function () {
                            $("#devicelogs")[0].triggerToolbar();
                        }, 50);
                    } else {
                        // to refresh the filter
                        $(this).trigger('change');
                    }
                }
            });
        }, 100);
    };

    function datetimecheck(value, colname) {
        if (value.length != 10)
            return [false, "Nem megfelelő a dátum hossza (YYYY.mm.DD)!"];
        var dateParts = value.split(".");
        var dat = new Date(dateParts[0], dateParts[1] - 1, dateParts[2]);
        if (dat.getDate() != parseInt(dateParts[2]) || dat.getMonth() != parseInt(dateParts[1] - 1) || dat.getFullYear() != dateParts[0])
            return [false, "Nem megfelelő dátum (YYYY.mm.DD)!"];
        var min = new Date("1753.01.01");
        var max = new Date("9999.12.31");
        if (dat < min || dat > max)
            return [false, "Csak 1753.01.01 és 9999.12.31 közti érték adható!"];
        return [true, ""];
    }

    jQuery("#devicelogs").jqGrid({
        url: '@Url.Action("ListDeviceLogFromDevice", "Stock")',//load
        editurl: '@Url.Action("UpdateDeviceLogFromDevice", "Stock")?devId=' + SelectedDeviceID,// click load
        datatype: "json",
        colNames: [
            'Műveletek'
            , 'id'
            , 'Vált. ideje'
            , 'Kezelő'
            , 'Ügyfél'
            , 'Megjegyzés'
        ],
        colModel: [
            {
                name: "act"
                , formatoptions: {
                    keys: false,
                    editbutton: true,
                    delbutton: true,
                    afterSave: reloadgrid,
                    afterRestore: reloadgrid,
                    onEdit: hidecol
                }
                , width: 50
                , formatter: "actions"
                , searchoptions: {}
                , index: "act"
                , sortable: false
                , search: false
                , hidden: false
            },
            { name: 'Id', index: 'Id', hidden: true, sortable: false, editable: false },
            {
                name: 'DeviceLogDate', index: 'DeviceLogDate', width: 80, align: "center",
                hidden: false, sortable: true, sorttype: 'date',
                editable: true, editoptions: { dataInit: initDateSearch }, editrules: { custom: true, custom_func: datetimecheck },
                formatter: 'date', formatoptions: { srcformat: 'Y-m-d', newformat: 'Y.m.d' },
                search: true, searchoptions: { sopt: ['eq', 'ne', 'lt', 'le', 'gt', 'ge'], dataInit: initDateSearch }, searchrules: { custom: true, custom_func: datetimecheck }
            },
            {
                name: 'AreaName', index: 'AreaName', width: 100, align: "left", editable: true, sortable: true, edittype: 'select',
                editoptions: {
                    dataUrl: '@Url.Action("ListAreas", "Stock")',
                    buildSelect: function (result) { return result; },
                    NullIfEmpty: true
                }
            },
            { name: 'Name', index: 'Name', width: 140, align: "center", editable: false, formatter: buttonFormatter, sortable: true },
            { name: 'Remark', index: 'Remark', width: 160, align: "left", editable: true, edittype: 'textarea', sortable: true },
        ],
        rowNum: 20,
        rowList: [20, 40, 60],
        toppager: true,
        pager: '#devicelogspager',
        //sortname: 'DeviceLogDate',
        viewrecords: true,
        //sortorder: "asc",
        caption: 'Kezelők',
        rownumbers: true,
        gridview: true,
        hoverrows: true,
        scrollrows: false,
        shrinkToFit: false,
        height: '100%',
        width: '560',
        beforeSelectRow: function (rowid) {
            SelectedDeviceLogID = rowid;
        },
        loadComplete: function () {
            if (null == SelectedDeviceID) {
                $("#add_" + $.jgrid.jqID(this.id)).hide();
                $("#add_" + $.jgrid.jqID(this.id) + "_top").hide();
            } else {
                $("#add_" + $.jgrid.jqID(this.id)).show();
                $("#add_" + $.jgrid.jqID(this.id) + "_top").show();
            }
        }
    });        

    jQuery("#devicelogs").jqGrid('navGrid', '#devicelogspager'
    , { edit: false, add: true, del: false, refresh: true, cloneToTop: true }
    , {} //prmEdit
    , {
        width: 430,
        recreateForm: true,
        closeAfterAdd: true,
        afterShowForm: function (form) {
            //be kell lépni a dátummezőbe, hogy feljöjjön a datepicke, ezért elveszem a focust
            $('#DeviceLogDate', form).blur();
        }
    } //prmAdd
    , {} //prmDel
    , {
        width: 500,
        multipleSearch: true,
        //multipleGroup: true,
        recreateFilter: true,
        //closeOnEscape: true,
        //closeAfterSearch: true,
        overlay: 0,
        afterRedraw: function () {
            $('input.add-rule', this)//.button().val('Add new rule')
                .attr('title', 'Új szabály hozzáadása');
            //$('input.add-group', this)//.button().val('Add new group or rules')
            //    .attr('title', 'Új szabálycsoport hozzáadása');
            $('input.delete-rule', this)//.button().val('Delete rule')
                .attr('title', 'Szabály törlése');
            //$('input.delete-group', this)//.button().val('Delete group')
            //    .attr('title', 'Szabálycsoport törlése');
            //$(this).find("table.group:not(:first)").css({
            //    borderWidth: "1px",
            //    borderStyle: "dashed"
            //});
        }
    } //prmSearch
    , {} //prmView
    ).jqGrid('filterToolbar', { stringResult: true, searchOnEnter: true, defaultSearch: "cn" });

</script>

}

