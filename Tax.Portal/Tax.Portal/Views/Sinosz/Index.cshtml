@using Tax.Data.Models;
@using Microsoft.AspNet.Identity;
@using Microsoft.AspNet.Identity.EntityFramework;

@{
    ViewBag.Title = "SINOSZ-tagok keresése";
}

<h2>@ViewBag.Title</h2>

<style type="text/css">
    .ui-jqgrid .ui-state-highlight {
        background: #cccccc;
    }
    /*nem tudom a web lapon customizálni*/
    .container .grid {
        border: 1px solid #ddd;
        padding-left: 0px;
        padding-top: 15px;
        padding-right: 0px;
        padding-bottom: 15px;
        margin-left: 0px;
        margin-top: 0px;
        margin-right: 0px;
        margin-bottom: 0px;
    }
</style>

@using (var db = new Tax.Data.Models.ApplicationDbContext())
{
    string usrId = User.Identity.GetUserId();
    if (db.ApplicationUserRole.Any(x =>
            x.UserId == usrId
            && x.Role.Name == "SinoszAdmin"))
    {
        <div class="col-lg-3 pull-right">
            <input id="inactivator" type="button" class="btn btn-warning" data-toggle="modal" data-target=".bs-modal-sm" value="Listázott tagok inaktiválása">
        </div>
    }
}
   
<hr />

<div class="modal fade bs-modal-sm" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="col-md-12">
                <div style="background-color: white">
                    <input type="button" class="btn btn-default close" data-dismiss="modal" value=" X " />
                    <hr />
                    <div class="row">
                        <div class="text-center">
                            <h3>Inaktívvá szeretné tenni a listázott tagokat?</h3>
                        </div>
                    </div>
                    <hr />
                    <div class="row">
                        <div class="col-lg-12 text-center">
                            <input id="btnSuserInactivator" type="button" class="btn btn-warning" data-dismiss="modal" value=" INAKTIVÁLÁS " />
                        </div>
                    </div>
                    <hr />
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="container grid">
        <div class="col-md-12">
            <div>
                <table id="sinoszusers" class="display"><tr><td /></tr></table>
                <div id="sinoszuserspager"></div>
            </div>
        </div>
    </div>
</div>




@section Scripts {
    @Scripts.Render("~/Scripts/jqgrid")

<script type="text/javascript">
    (function (global, undefined) {

        $("#inactivator").hide().css({ visibility: "hidden" });

        function linkFormatter(cellvalue, options, rowObject) {
            return '<a href = "@Url.Action("Edit", "Sinosz")?UserID=' + rowObject[0] + '">' + cellvalue + '</a>';
        }

        initDateSearch = function (elem) {
            setTimeout(function () {
                $(elem).datepicker({
                    autoSize: true,
                    //showOn: 'button', // it dosn't work in searching dialog
                    changeYear: true,
                    changeMonth: true,
                    showButtonPanel: true,
                    showWeek: true,
                    onSelect: function () {
                        if (this.id.substr(0, 3) === "gs_") {
                            setTimeout(function () {
                                $("#sinoszusers")[0].triggerToolbar();
                            }, 50);
                        } else {
                            // to refresh the filter
                            $(this).trigger('change');
                        }
                    }
                });
            }, 100);
        };

        numberSearchOptions = ['eq', 'ne', 'lt', 'le', 'gt', 'ge'];// 'nu', 'nn', 'in', 'ni'],

        numberTemplate = {
            formatter: 'integer', align: 'right', sorttype: 'number',
            searchoptions: { searchhidden: true, sopt: numberSearchOptions }
        };

        myDefaultSearch = 'cn';

        var ids = [];

        function datetimecheck(value, colname) {
            if (value.length != 10)
                return [false, "Nem megfelelő a dátum hossza (YYYY.mm.DD)!"];
            var dateParts = value.split(".");
            var dat = new Date(dateParts[0], dateParts[1] - 1, dateParts[2]);
            if (dat.getDate() != parseInt(dateParts[2]) || dat.getMonth() != parseInt(dateParts[1] - 1) || dat.getFullYear() != dateParts[0])
                return [false, "Nem megfelelő dátum (YYYY.mm.DD)!"];
            var min = new Date("1753.01.01");
            var max = new Date("9999.12.31");
            if (dat < min || dat > max)
                return [false, "Csak 1753.01.01 és 9999.12.31 közti érték adható!"];
            return [true, ""];
        }

        jQuery("#sinoszusers").jqGrid({
            url: '@Url.Action("ListSinoszUsers", "Sinosz")?SinoszId=@ViewBag.SinoszId',
            editurl: '@Url.Action("UpdateSinoszUsers", "Sinosz")',
            datatype: "json",
            colNames: [
                'id'
                , 'Státusz'
                , 'Név'
                , 'Tagsági azonosító'
                , 'Nyilvántartó szervezet'
                , 'Utolsó érvényes befizetés'
                , 'Befizetés jogcíme'
                , 'Nyugtaszám'
                , 'Születési név'
                , 'IRSZ - Város'
                , 'Lakcím'
                , 'Tagviszony'
                , 'Tagkönyv státusza'
                , 'Születési dátum'
                , 'Szakképzettség'
                , 'Születési hely'
                , 'Anyja neve'
                , 'Telefon'
                , 'Nem'
                , 'Iskolai végzettség'
                , 'Családi állapot'
                , 'Belépési dátum'
                , 'Megjegyzés'
                , 'Hallássérülés foka'
                , 'Sérülés ideje'
                , 'Nyugdíj forma'
                , 'Határozat száma'
                , 'Állampolgárság'
                , 'Utolsó bef. összeg'
                , 'E-mail'
                , 'Funkció'
                , 'Vonalkód'
            ],
            colModel: [
                { name: 'Id', index: 'Id', hidden: true }, //nem látszik, nem kereshető, nem vihető fel
                { name: 'StatusName', index: 'StatusName', width: 80, align: "left", hidden: false, sortable: true, search: true, editable: false }, //látszik, kereshető, nem vihető fel
                { name: 'SinoszUserName', index: 'SinoszUserName', width: 200, align: "left", hidden: false, sortable: true, search: true, editable: true, editrules: { required: true }, formatter: linkFormatter }, //látszik, kereshető. felvihető
                { name: 'SinoszId', index: 'SinoszId', width: 150, align: "left", hidden: false, sortable: true, search: true, editable: false }, //látszik, kereshető, nem vihető fel
                {
                    name: 'OrganizationName', index: 'OrganizationName', hidden: true, search: true, searchoptions: { searchhidden: true }, //nem létszik, kereshető, felvihető
                    editable: true, editrules: { edithidden: true }, edittype: 'select',
                    editoptions: {
                        dataUrl: '@Url.Action("ListOrganizations", "Sinosz")',
                        buildSelect: function (result) { return result; },
                        NullIfEmpty: true
                    }
                },
                {
                    name: 'DocumentDate', index: 'DocumentDate',
                    hidden: true,
                    formatter: 'date', formatoptions: { srcformat: 'Y-m-d', newformat: 'Y.m.d' },
                    search: true, searchoptions: { searchhidden: true, sopt: ['eq', 'ne', 'lt', 'le', 'gt', 'ge'], dataInit: initDateSearch }, searchrules: { custom: true, custom_func: datetimecheck }
                },//nem létszik, kereshető, nem vihető fel
                { name: 'AccountingTypeName', index: 'AccountingTypeName', hidden: true, search: true, searchoptions: { searchhidden: true }, editable: false },//nem létszik, kereshető, nem vihető fel
                { name: 'DocumnetNumber', index: 'DocumnetNumber', hidden: true, search: true, searchoptions: { searchhidden: true }, editable: false },//nem látszik, kereshető, nem vihető fel
                { name: 'BirthName', index: 'BirthName', hidden: true, search: true, searchoptions: { searchhidden: true }, editable: false },//nem létszik, kereshető, nem vihető fel
                {
                    name: 'PostCode', index: 'PostCode', hidden: true, search: true, searchoptions: { searchhidden: true }, //nem létszik, kereshető, felvihető
                    editable: true, editrules: { edithidden: true }, edittype: 'select',
                    editoptions: {
                        dataUrl: '@Url.Action("ListPostCode", "Admin")',
                        buildSelect: function (result) { return result; },
                        NullIfEmpty: true
                    }
                },
                { name: 'HomeAddress', index: 'HomeAddress', hidden: true, search: true, searchoptions: { searchhidden: true }, editable: true, editrules: { edithidden: true, required: true } },//nem létszik, kereshető, felvihető
                { name: 'RelationshipName', index: 'RelationshipName', hidden: true, search: true, searchoptions: { searchhidden: true }, editable: false },//nem létszik, kereshető, nem vihető fel
                { name: 'CardStatusName', index: 'CardStatusName', hidden: true, search: true, searchoptions: { searchhidden: true }, editable: false },//nem látszik, kereshető, nem vihető fel
                {
                    name: 'BirthDate', index: 'BirthDate', width: 140, align: "center",
                    hidden: false, sortable: true, sorttype: 'date',
                    editable: true, editoptions: { dataInit: initDateSearch }, editrules: { custom: true, custom_func: datetimecheck },
                    formatter: 'date', formatoptions: { srcformat: 'Y-m-d', newformat: 'Y.m.d' },
                    search: true, searchoptions: { sopt: ['eq', 'ne', 'lt', 'le', 'gt', 'ge'], dataInit: initDateSearch }, searchrules: { custom: true, custom_func: datetimecheck }
                },//látszik, kereshető, felvihető
                { name: 'Qualification', index: 'Qualification', hidden: true, search: true, searchoptions: { searchhidden: true }, editable: false },//nem létszik, kereshető, nem vihető fel
                { name: 'BirthPlace', index: 'BirthPlace', hidden: true, search: true, searchoptions: { searchhidden: true }, editable: true, editrules: { edithidden: true, required: true } },//nem létszik, kereshető, felvihető
                { name: 'MothersName', index: 'MothersName', width: 200, align: "left", hidden: false, sortable: true, search: true, editable: true, editrules: { required: true } }, //látszik, kereshető, felvihető
                { name: 'Telephone', index: 'Telephone', hidden: true, search: true, searchoptions: { searchhidden: true }, editable: false },//nem létszik, kereshető, nem vihető fel
                {
                    name: 'GenusName', index: 'GenusName', hidden: true, search: true, searchoptions: { searchhidden: true }, //nem létszik, kereshető, felvihető
                    editable: true, editrules: { edithidden: true }, edittype: 'select',
                    editoptions: {
                        dataUrl: '@Url.Action("ListGenus", "Sinosz")',
                        buildSelect: function (result) { return result; },
                        NullIfEmpty: true
                    }
                },
                { name: 'EducationName', index: 'EducationName', hidden: true, search: true, searchoptions: { searchhidden: true }, editable: false },//nem látszik, kereshető, nem vihető fel
                { name: 'MaritalStatusName', index: 'MaritalStatusName', hidden: true, search: true, searchoptions: { searchhidden: true }, editable: false },//nem látszik, kereshető, nem vihető fel
                {
                    name: 'EnterDate', index: 'EnterDate',
                    hidden: false, sortable: true, sorttype: 'date',
                    editable: true, editoptions: { dataInit: initDateSearch }, editrules: { custom: true, custom_func: datetimecheck },
                    formatter: 'date', formatoptions: { srcformat: 'Y-m-d', newformat: 'Y.m.d' },
                    search: true, searchoptions: { sopt: ['eq', 'ne', 'lt', 'le', 'gt', 'ge'], dataInit: initDateSearch }, searchrules: { custom: true, custom_func: datetimecheck }
                },//nem létszik, kereshető, felvihető
                { name: 'Remark', index: 'Remark', hidden: true, search: true, searchoptions: { searchhidden: true }, editable: false },//nem látszik, kereshető, nem vihető fel
                {
                    name: 'HearingStatusName', index: 'HearingStatusName', hidden: true, search: true, searchoptions: { searchhidden: true }, //nem látszik, kereshető, felvihető
                    editable: true, editrules: { edithidden: true }, edittype: 'select',
                    editoptions: {
                        dataUrl: '@Url.Action("ListHearingStatus", "Sinosz")',
                        buildSelect: function (result) { return result; },
                        NullIfEmpty: true
                    }
                },
                { name: 'InjuryTimeText', index: 'InjuryTimeText', hidden: true, search: true, searchoptions: { searchhidden: true }, editable: false },//nem látszik, kereshető, nem vihető fel
                {
                    name: 'PensionTypeName', index: 'PensionTypeName', hidden: true, search: true, searchoptions: { searchhidden: true }, //nem látszik, kereshető, felvihető
                    editable: true, editrules: { edithidden: true }, edittype: 'select',
                    editoptions: {
                        dataUrl: '@Url.Action("ListPensionTypes", "Sinosz")',
                        buildSelect: function (result) { return result; },
                        NullIfEmpty: true
                    }
                },
                { name: 'DecreeNumber', index: 'DecreeNumber', hidden: true, search: true, searchoptions: { searchhidden: true }, editable: true, editrules: { edithidden: true, required: true } },//nem látszik, kereshető, felvihető
                {
                    name: 'NationText', index: 'NationText', hidden: true, search: true, searchoptions: { searchhidden: true }, //nem látszik, kereshető, felvihető
                    editable: true, editrules: { edithidden: true }, edittype: 'select',
                    editoptions: {
                        dataUrl: '@Url.Action("ListNations", "Sinosz")',
                        buildSelect: function (result) { return result; },
                        NullIfEmpty: true
                    }
                },
                {
                    name: 'Sum', index: 'Sum',
                    hidden: true, search: true, template: numberTemplate,
                    editable: false, 
                    searchrules: { integer: true }
                },//nem látszik, kereshető, nem vihető fel
                { name: 'Email', index: 'Email', hidden: true, search: true, searchoptions: { searchhidden: true }, editable: false },//nem látszik, kereshető, nem vihető fel
                { name: 'PositionName', index: 'PositionName', hidden: true, search: true, searchoptions: { searchhidden: true }, editable: false },//nem látszik, kereshető, nem vihető fel
                { name: 'Barcode', index: 'Barcode', hidden: true, search: true, searchoptions: { searchhidden: true }, editable: false }//nem látszik, kereshető, nem vihető fel
            ],
            rowNum: 20,
            rowList: [20, 40, 60],
            toppager: true,
            pager: '#sinoszuserspager',
            //sortname: 'StatusName',
            viewrecords: true,
            //sortorder: "asc",
            caption: 'SINOSZ-tagok',
            rownumbers: true,
            gridview: true,
            hoverrows: true,
            scrollrows: true,
            shrinkToFit: false,
            height: '100%',
            width: '800',
            @*beforeSelectRow: function (rowid, e) {
                document.location.href = '@Url.Action("Edit", "Sinosz")?UserID=' + rowid
            },*@
            loadComplete: function () {
                var postdata = $("#sinoszusers").getGridParam("postData");
                if ($("#sinoszusers").getGridParam("search")) {
                    $("#inactivator").show().css({ visibility: "visible" });
                } else {
                    $("#inactivator").hide().css({ visibility: "hidden" });
                }
            }
        });

        jQuery("#sinoszusers").jqGrid('navGrid', '#sinoszuserspager'
            , { edit: false, add: true, del: false, refresh: true, cloneToTop: true }
            , {} //prmEdit
            , { width: 600, recreateForm: true, closeAfterAdd: true } //prmAdd
            , {} //prmDel
            , {
                width: 600,
                multipleSearch: true,
                //multipleGroup: true,
                recreateFilter: true,
                //closeOnEscape: true,
                //closeAfterSearch: true,
                overlay: 0,
                afterRedraw: function () {
                    $('input.add-rule', this)//.button().val('Add new rule')
                        .attr('title', 'Új szabály hozzáadása');
                    //$('input.add-group', this)//.button().val('Add new group or rules')
                    //    .attr('title', 'Új szabálycsoport hozzáadása');
                    $('input.delete-rule', this)//.button().val('Delete rule')
                        .attr('title', 'Szabály törlése');
                    //$('input.delete-group', this)//.button().val('Delete group')
                    //    .attr('title', 'Szabálycsoport törlése');
                    //$(this).find("table.group:not(:first)").css({
                    //    borderWidth: "1px",
                    //    borderStyle: "dashed"
                    //});
                }
            } //prmSearch
            , {} //prmView
        ).jqGrid('filterToolbar', { stringResult: true, searchOnEnter: true, defaultSearch: "cn" });


        $('#btnSuserInactivator').click(function () {
            var postdata = $("#sinoszusers").getGridParam("postData");
            $.ajax({
                url: '@Url.Action("ListSinoszUsers", "Sinosz")?'
                        + '_search=' + $("#sinoszusers").getGridParam("search")
                        + '&page=' + postdata.page
                        + '&rows=' + $("#sinoszusers").getGridParam("reccount")
                        + '&sidx=' + $("#sinoszusers").getGridParam("sortname")
                        + '&sord=' + $("#sinoszusers").getGridParam("sortorder")
                        + '&filters=' + postdata.filters
                        + '&isInactivator=True',
                type: 'POST',
                beforeSend: function (jqXHR, textStatus) { jQuery('#grid_id').block({ message: '<h3>Betöltés…</h3>' }); },
                complete: function (jqXHR, textStatus) {
                    jQuery('#grid_id').unblock();
                    $("#sinoszusers").trigger("reloadGrid", [{ current: true }]);
                },
                loadError: function (xhr, status, error) { alert(status + " " + error); }
            });
        });

    }(window));
    </script>

}