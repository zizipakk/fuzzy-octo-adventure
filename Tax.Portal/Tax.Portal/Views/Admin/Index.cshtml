<style type="text/css">
    .ui-jqgrid .ui-state-highlight {
        background: #cccccc;
    }
    /*nem tudom a web lapon customizálni*/
    .container .grid {
        border: 1px solid #ddd;
        padding-left: 0px;
        padding-top: 15px;
        padding-right: 0px;
        padding-bottom: 15px;
        margin-left: 0px;
        margin-top: 0px;
        margin-right: 0px;
        margin-bottom: 0px;
    }

    .modal-dialog {
        width: 600px; /* your width */
        height: auto;
    }
</style>

<div class="modal fade bs-modal-sm" id="warningmodal" tabindex="-1" role="dialog" aria-labelledby="" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header" style="color:orange">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">WARNING!</h4>
            </div>
            <div class="modal-body" style="color:orange">
                <p id="warningtext" style="text-align:center"></p>
            </div>
            <div class="modal-footer">
                <div class="text-center text-center">
                    <input type="button" class="btn btn-warning" data-dismiss="modal" value=" OK " />
                </div>
            </div>
        </div><!-- /.modal-content -->
    </div>
</div>

<div class="modal fade bs-modal-sm" id="errormodal" tabindex="-1" role="dialog" aria-labelledby="" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header" style="color:red">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">ERROR!</h4>
            </div>
            <div class="modal-body" style="color:red">
                <p id="errortext" style="text-align:center"></p>
            </div>
            <div class="modal-footer">
                <div class="text-center text-center">
                    <input type="button" class="btn btn-danger" data-dismiss="modal" value=" OK " />
                </div>
            </div>
        </div><!-- /.modal-content -->
    </div>
</div>

<div class="modal fade bs-modal-sm" id="createmodaluser" tabindex="-1" role="dialog" aria-labelledby="" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Add user</h4>
            </div>
            <div class="modal-body" style="height:200px">
                @Html.ValidationSummary()
                <div class="col-sm-12 col-xs-12">
                    @Html.Label("New username")
                </div>
                <div class="col-sm-12 col-xs-12">
                    @Html.TextBox("UserName", "", new { @class = "form-control", placeholder = "Type here new username" })
                </div>
                <div class="col-sm-12 col-xs-12" style="padding-top:10px">
                    @Html.Label("New initial password")
                </div>
                <div class="col-sm-12 col-xs-12">
                    @Html.Password("Password", "", new { @class = "form-control", placeholder = "Type here new initial password" })
                </div>
                <div class="col-sm-12 col-xs-12" style="padding-top:10px">
                    @Html.Label("New name")
                </div>
                <div class="col-sm-12 col-xs-12">
                    @Html.TextBox("Name", "", new { @class = "form-control", placeholder = "Type here new name" })
                </div>
                <div class="col-sm-12 col-xs-12" style="padding-top:10px">
                    @Html.Label("New email")
                </div>
                <div class="col-sm-12 col-xs-12">
                    @Html.TextBox("Email", "", new { @class = "form-control", placeholder = "Type here new email" })
                </div>
                <div class="col-sm-12 col-xs-12" style="padding-top:10px">
                    @Html.Label("Admin?")
                </div>
            </div>
            <div class="modal-footer">
                <div class="text-center pull-left">
                    <input type="button" class="btn btn-default" data-dismiss="modal" value=" BACK " />
                </div>
                <div class="text-center pull-right">
                    <input id="createbuttonuser" type="button" class="btn btn-warning" value=" SAVE " />
                </div>
            </div>
        </div><!-- /.modal-content -->
    </div>
</div>

<div class="modal fade bs-modal-sm" id="deletemodaluser" tabindex="-1" role="dialog" aria-labelledby="" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">ATTENTION!</h4>
            </div>
            <div class="modal-body">
                <p id="deletetext" style="text-align:center">Do you really want to delete this?</p>
            </div>
            <div class="modal-footer">
                <div class="text-center pull-left">
                    <input type="button" class="btn btn-default" data-dismiss="modal" value=" CANCEL " />
                </div>
                <div class="text-center pull-right">
                    <input id="deletebuttonuser" type="button" class="btn btn-warning" data-dismiss="modal" value=" DELETE " />
                </div>
            </div>
        </div><!-- /.modal-content -->
    </div>
</div>

<div class="modal fade bs-modal-sm" id="createmodalsetup" tabindex="-1" role="dialog" aria-labelledby="" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Add setup</h4>
            </div>
            <div class="modal-body" style="height:200px">
                @Html.ValidationSummary()
                <div class="col-sm-12 col-xs-12">
                    @Html.Label("New username")
                </div>
                <div class="col-sm-12 col-xs-12">
                    @Html.TextBox("UserName", "", new { @class = "form-control", placeholder = "Type here new username" })
                </div>
                <div class="col-sm-12 col-xs-12" style="padding-top:10px">
                    @Html.Label("New initial password")
                </div>
                <div class="col-sm-12 col-xs-12">
                    @Html.Password("Password", "", new { @class = "form-control", placeholder = "Type here new initial password" })
                </div>
                <div class="col-sm-12 col-xs-12" style="padding-top:10px">
                    @Html.Label("New name")
                </div>
                <div class="col-sm-12 col-xs-12">
                    @Html.TextBox("Name", "", new { @class = "form-control", placeholder = "Type here new name" })
                </div>
                <div class="col-sm-12 col-xs-12" style="padding-top:10px">
                    @Html.Label("New email")
                </div>
                <div class="col-sm-12 col-xs-12">
                    @Html.TextBox("Email", "", new { @class = "form-control", placeholder = "Type here new email" })
                </div>
                <div class="col-sm-12 col-xs-12" style="padding-top:10px">
                    @Html.Label("Admin?")
                </div>
                <div class="col-sm-12 col-xs-12">
                    @Html.CheckBox("isLocked", "")
                </div>
            </div>
            <div class="modal-footer">
                <div class="text-center pull-left">
                    <input type="button" class="btn btn-default" data-dismiss="modal" value=" BACK " />
                </div>
                <div class="text-center pull-right">
                    <input id="createbuttonsetup" type="button" class="btn btn-warning" value=" SAVE " />
                </div>
            </div>
        </div><!-- /.modal-content -->
    </div>
</div>

<div class="modal fade bs-modal-sm" id="deletemodalsetup" tabindex="-1" role="dialog" aria-labelledby="" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">ATTENTION!</h4>
            </div>
            <div class="modal-body">
                <p id="deletetext" style="text-align:center">Do you really want to delete this?</p>
            </div>
            <div class="modal-footer">
                <div class="text-center pull-left">
                    <input type="button" class="btn btn-default" data-dismiss="modal" value=" CANCEL " />
                </div>
                <div class="text-center pull-right">
                    <input id="deletebuttonsetup" type="button" class="btn btn-warning" data-dismiss="modal" value=" DELETE " />
                </div>
            </div>
        </div><!-- /.modal-content -->
    </div>
</div>

<div class="bs-example bs-example-tabs">
    <ul id="AdminTab" class="nav nav-tabs" data-tabs="tabs">
        <li class="active"><a data-toggle="tab" href="#Users">Users</a></li>
        <li><a data-toggle="tab" href="#Setup">Setup</a></li>
    </ul>
    <div id="SinoszTabContent" class="tab-content">
        <div class="tab-pane fade in active" id="Users">
            <div class="row">
                <div class="container grid">
                    <div class="col-sm-12 col-xs-12">
                        <div class="btn-group">
                            <a id="createuser" class="fa fa-plus fa-lg" style="padding-left:5px; padding-right:5px" data-toggle="modal" data-target="#createmodaluser"></a>
                            <a id="deluser" class="fa fa-trash-o fa-lg" style="visibility:hidden; padding-right:5px" data-toggle="modal" data-target="#deletemodaluser"></a>
                        </div>
                        <table id="users" class="display"><tr><td /></tr></table>
                        <div id="userspager"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="tab-pane fade" id="Setup">
            <div class="row">
                <div class="container grid">
                    <div class="col-sm-12 col-xs-12">
                        <div class="btn-group">
                            <a id="createsetup" class="fa fa-plus fa-lg" style="padding-left:5px; padding-right:5px" data-toggle="modal" data-target="#createmodaluser"></a>
                            <a id="delsetup" class="fa fa-trash-o fa-lg" style="visibility:hidden; padding-right:5px" data-toggle="modal" data-target="#deletemodaluser"></a>
                        </div>
                        <table id="setups" class="display"><tr><td /></tr></table>
                        <div id="setupspager"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<input id="rowidUser" style="visibility: hidden" />
<input id="rowidSetup" style="visibility: hidden" />


@section Scripts {
@Scripts.Render("~/Scripts/jqgrid")

    <script type="text/javascript">

        var getColumnIndexByName = function (gridname, columnName) {
            var grid = $("#" + gridname);
            var cm = grid.jqGrid('getGridParam', 'colModel');
            var retval = -1;
            $.each(cm, function () {
                if (this.name === columnName) {
                    retval = cm.indexOf(this);
                }
            });
            return retval;
        };

        jQuery("#users").jqGrid({
            url: '@Url.Action("ListUsers", "Admin")',
            editurl: '@Url.Action("UpdateUsers", "Admin")',
            datatype: "json",        
            loadError: function (jqXHR, textStatus, errorThrown) {
                $('#errortext').text(jqXHR.responseText);
                $('#errormodal').modal({ show: true });
            },
            colNames: [
                'Action'
                , 'id'
                , 'Username'
                , 'Name'
                , 'Password'
                , 'Email'
                , 'Admin?'
            ],
            colModel: [
            {
                name: "act"
                , index: "act"
                , formatter: "actions"
                , formatoptions: {
                    keys: false, editbutton: true, delbutton: false,
                    afterSave: function () {
                        $("#users").trigger("reloadGrid", [{ current: true }]);
                    },
                    afterRestore: function () {
                        $("#users").trigger("reloadGrid", [{ current: true }]);
                    },
                    onError: function (jqXHR, textStatus, errorThrown) {
                        $('#errortext').text(jqXHR.responseText);
                        $('#errormodal').modal({ show: true });
                    }
                },
                {
                    name: 'Id', index: 'Id', width: 80, align: "left", hidden: true, sortable: false, editable: false,
                    editoptions: {
                        dataInit: function (element) {
                            $(this).jqGrid('getColProp', 'Admin').formatoptions.disabled = false;
                        }
                    }
                },
                { name: 'UserName', index: 'UserName', width: 90, align: "left", editable: true, sortable: true },
                { name: 'Name', index: 'Name', width: 90, align: "left", editable: true, sortable: true },
                { name: 'Password', index: 'Password', width: 90, align: "left", editable: false, sortable: true },
                { name: 'Email', index: 'Email', width: 120, align: "left", editable: true, sortable: true },
                {
                    name: 'isLocked', index: 'isLocked', width: 45, align: "center", editable: true,
                    edittype: 'checkbox', editoptions: { value: "True:False" },
                    searchoptions: { sopt: ['eq'], value: '"":Mind;True:Aktív;False:Inaktív' }, stype: 'select',
                    formatter: "checkbox", formatoptions: { disabled: true }, sortable: true
                }
            ],
            rowNum: 20,
            rowList: [20, 40, 60],
            toppager: true,
            pager: '#userspager',
            sortname: 'Name',
            viewrecords: true,
            sortorder: "asc",
            caption: 'Users',
            rownumbers: true,
            gridview: true,
            hoverrows: true,
            scrollrows: false,
            shrinkToFit: false,
            height: '100%',
            autowidth: true,
            onSelectRow: function (rowid, e) {
                $("#rowidUser").val(rowid);
                $("#delUser").show().css({ visibility: "visible" });
            },
            loadComplete: function () {
                $("#delUser").hide().css({ visibility: "hidden" });
            }
        });
    
        jQuery("#users").jqGrid('navGrid', '#userspager'
            , { edit: false, add: false, del: false, refresh: true, cloneToTop: true }
            , {} //prmEdit
            , {} //prmAdd
            , {} //prmDel
            , {
                width: 600,
                multiplesearch: true,
                recreatefilter: true,
                closeonescape: true,
                closeaftersearch: true,
                overlay: 0,
                afterredraw: function () {
                    $('input.add-rule', this)//.button().val('add new rule')
                        .attr('title', 'add new search rule');
                    $('input.delete-rule', this)//.button().val('delete rule')
                        .attr('title', 'delete rule');
                }
            } //prmsearch
            , {} //prmview
        ).jqGrid('filterToolbar', { stringResult: true, searchOnEnter: true, defaultSearch: "cn" });

        jQuery("#users").bind("jqGridInlineSuccessSaveRow",
            function (e, jqXHR, rowid, options) {
                var str = JSON.parse(jqXHR.responseText);
                if (!str.success) {
                    if (str.error) {
                        $('#errortext').text(str.response);
                        $('#errormodal').modal({ show: true });
                    }
                    else {
                        $('#warningtext').text(str.response);
                        $('#warningmodal').modal({ show: true });
                    }
                }
                return [true, jqXHR.responseText];
            }
        );

        $('#deletebuttonuser').click(function () {
            $.ajax({
                url: '@Url.Action("DeleteUser", "Admin")?id=' + $("#rowidUser").val(),
                type: 'POST',
                beforeSend: function (jqXHR, textStatus) { jQuery('#users').block({ message: '<h3>Wait…</h3>' }); },
                complete: function (jqXHR, textStatus) {
                    var str = JSON.parse(jqXHR.responseText);
                    if (!str.success) {
                        if (str.error) {
                            $('#errortext').text(str.response);
                            $('#errormodal').modal({ show: true });
                        }
                        else {
                            $('#warningtext').text(str.response);
                            $('#warningmodal').modal({ show: true });
                        }
                    }
                    jQuery('#users').unblock();
                    $("#users").trigger("reloadGrid", [{ current: true }]);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    $('#errortext').text(jqXHR.responseText);
                    $('#errormodal').modal({ show: true });
                }
            });
        });

        $('#createbuttonuser').click(function () {
            $.ajax({
                url: '@Url.Action("CreateUser", "Admin")?nameEn=' + $("#NewtagNameEn").val() + '&nameHu=' + $("#NewtagNameHu").val(),
                type: 'POST',
                beforeSend: function (jqXHR, textStatus) {
                    jQuery('#users').block({ message: '<h3>Wait…</h3>' });
                },
                complete: function (jqXHR, textStatus) {
                    var str = JSON.parse(jqXHR.responseText);
                    if (!str.success) {
                        //<li style="display:none"></li>
                        $('.validation-summary-valid').attr('class', 'validation-summary-errors');
                        //$(".validation-summary-error > ul").appendChild(str.response);
                        //$(".validation-summary-error ul").append('<li style="display:normal">teszt</li>');
                        $("#ValidationSummary ul").append('<li style="display:normal">teszt</li>');

                        //val(str.response);
                        //if (str.error) {
                        //    $('#errortext').text(str.response);
                        //    $('#errormodal').modal({ show: true });
                        //}
                        //else {
                        //    $('#warningtext').text(str.response);
                        //    $('#warningmodal').modal({ show: true });
                        //}
                    }
                    else {
                        $('#createbuttonuser').modal({ show: false });
                    }
                    jQuery('#users').unblock();
                    $("#users").trigger("reloadGrid", [{ current: true }]);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    $('#errortext').text(jqXHR.responseText);
                    $('#errormodal').modal({ show: true });
                }
            });
        });

        //setup

        jQuery("#setups").jqGrid({
            url: '@Url.Action("ListSystemParameters", "Admin")',
            editurl: '@Url.Action("UpdateSystemParameters", "Admin")',
            datatype: "json",
            colNames: [
                'Műveletek'
                , 'id'
                , 'Megnevezés'
                , 'Érték'
                , 'Leírás'
                , 'Nyilvános?'
            ],
            colModel: [
            {
                name: "act"
                , index: "act"
                , formatter: "actions"
                , formatoptions: {
                    keys: false, editbutton: true, delbutton: false,
                    afterSave: function () {
                        $("#setups").trigger("reloadGrid", [{ current: true }]);
                    },
                    afterRestore: function () {
                        $("#setups").trigger("reloadGrid", [{ current: true }]);
                    },
                    onError: function (jqXHR, textStatus, errorThrown) {
                        $('#errortext').text(jqXHR.responseText);
                        $('#errormodal').modal({ show: true });
                    }
                },
                {
                    name: 'Id', index: 'Id', hidden: true, sortable: false, editable: false,
                    editoptions: {
                        dataInit: function (element) { //mindenképpen kisül a beforeSelectRow előtt az inline edit, ez viszont szerencsére megelőzi,
                            $(this).jqGrid('getColProp', 'Public').formatoptions.disabled = false;
                        }
                    }
                },
                { name: 'Name', index: 'Name', width: 200, align: "left", editable: true, sortable: true },
                { name: 'Value', index: 'Value', width: 100, align: "right", editable: true, sortable: true },
                { name: 'Description', index: 'Description', width: 250, align: "left", editable: true, edittype: 'textarea', sortable: true },
                {
                    name: 'Public', index: 'Public', width: 50, align: "center",
                    editable: true, edittype: 'checkbox', editoptions: { value: "True:False" },
                    searchoptions: { sopt: ['eq'], value: '"":Mind;True:Aktív;False:Inaktív' }, stype: 'select',
                    formatter: "checkbox", formatoptions: { disabled: true }, sortable: true
                }
            ],
            rowNum: 10,
            rowList: [10, 20, 30],
            toppager: true,
            pager: '#setupspager',
            sortname: 'Name',
            viewrecords: true,
            sortorder: "asc",
            caption: 'System parameters',
            rownumbers: true,
            gridview: true,
            hoverrows: true,
            scrollrows: false,
            shrinkToFit: false,
            height: '100%',
            autowidth: true,
            onSelectRow: function (rowid, e) {
                $("#rowidSetup").val(rowid);
                $("#delSetup").show().css({ visibility: "visible" });
            },
            loadComplete: function () {
                $("#delSetup").hide().css({ visibility: "hidden" });
            }
        });

        jQuery("#setups").jqGrid('navGrid', '#setupspager'
            , { edit: false, add: true, del: false, refresh: true, cloneToTop: true }
            , {} //prmEdit
            , { width: 500, recreateForm: true, closeAfterAdd: true } //prmAdd
            , {} //prmDel
            , {
                width: 600,
                multiplesearch: true,
                recreatefilter: true,
                closeonescape: true,
                closeaftersearch: true,
                overlay: 0,
                afterredraw: function () {
                    $('input.add-rule', this)//.button().val('add new rule')
                        .attr('title', 'add new search rule');
                    $('input.delete-rule', this)//.button().val('delete rule')
                        .attr('title', 'delete rule');
                }
            } //prmsearch
            , {} //prmview
        ).jqGrid('filterToolbar', { stringResult: true, searchOnEnter: true, defaultSearch: "cn" });

        jQuery("#setups").bind("jqGridInlineSuccessSaveRow",
            function (e, jqXHR, rowid, options) {
                var str = JSON.parse(jqXHR.responseText);
                if (!str.success) {
                    if (str.error) {
                        $('#errortext').text(str.response);
                        $('#errormodal').modal({ show: true });
                    }
                    else {
                        $('#warningtext').text(str.response);
                        $('#warningmodal').modal({ show: true });
                    }
                }
                return [true, jqXHR.responseText];
            }
        );

        $('#deletebuttonsetup').click(function () {
            $.ajax({
                url: '@Url.Action("DeleteSetup", "Admin")?id=' + $("#rowidSetup").val(),
                type: 'POST',
                beforeSend: function (jqXHR, textStatus) { jQuery('#setups').block({ message: '<h3>Wait…</h3>' }); },
                complete: function (jqXHR, textStatus) {
                    var str = JSON.parse(jqXHR.responseText);
                    if (!str.success) {
                        if (str.error) {
                            $('#errortext').text(str.response);
                            $('#errormodal').modal({ show: true });
                        }
                        else {
                            $('#warningtext').text(str.response);
                            $('#warningmodal').modal({ show: true });
                        }
                    }
                    jQuery('#setups').unblock();
                    $("#setups").trigger("reloadGrid", [{ current: true }]);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    $('#errortext').text(jqXHR.responseText);
                    $('#errormodal').modal({ show: true });
                }
            });
        });

        $('#createbuttonsetups').click(function () {
            $.ajax({
                url: '@Url.Action("CreateSetup", "Admin")?nameEn=' + $("#NewtagNameEn").val() + '&nameHu=' + $("#NewtagNameHu").val(),
                type: 'POST',
                beforeSend: function (jqXHR, textStatus) { jQuery('#setups').block({ message: '<h3>Wait…</h3>' }); },
                complete: function (jqXHR, textStatus) {
                    var str = JSON.parse(jqXHR.responseText);
                    if (!str.success) {
                        //<li style="display:none"></li>
                        $('.validation-summary-valid').attr('class', 'validation-summary-errors');
                        //$(".validation-summary-error > ul").appendChild(str.response);
                        //$(".validation-summary-error ul").append('<li style="display:normal">teszt</li>');
                        $("#ValidationSummary ul").append('<li style="display:normal">teszt</li>');

                        //val(str.response);
                        //if (str.error) {
                        //    $('#errortext').text(str.response);
                        //    $('#errormodal').modal({ show: true });
                        //}
                        //else {
                        //    $('#warningtext').text(str.response);
                        //    $('#warningmodal').modal({ show: true });
                        //}
                    }
                    else {
                        $('#createbuttonsetup').modal({ show: false });
                    }
                    jQuery('#setups').unblock();
                    $("#setups").trigger("reloadGrid", [{ current: true }]);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    $('#errortext').text(jqXHR.responseText);
                    $('#errormodal').modal({ show: true });
                }
            });
        });

    </script>
}
