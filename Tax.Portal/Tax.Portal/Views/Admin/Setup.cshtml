@{
    ViewBag.Title = "Rendszerparaméterek";
}

<style type="text/css">
    .ui-jqgrid .ui-state-highlight {
        background: #cccccc;
    }
    /*nem tudom a web lapon customizálni*/
    .container .grid {
        border: 1px solid #ddd;
        padding-left: 0px;
        padding-top: 15px;
        padding-right: 0px;
        padding-bottom: 15px;
        margin-left: 0px;
        margin-top: 0px;
        margin-right: 0px;
        margin-bottom: 0px;
    }
</style>

<h2>@ViewBag.Title</h2>

<hr />
<div class="row">
    <div class="container grid">
        <div class="col-md-12">
            <div>
                <table id="setups" class="display"><tr><td /></tr></table>
                <div id="setupspager"></div>
            </div>
        </div>
    </div>
</div>





@section Scripts {
    @Scripts.Render("~/Scripts/jqgrid")

<script type="text/javascript">
    (function (global, undefined) {

        var getColumnIndexByName = function (gridname, columnName) {
            var grid = $("#" + gridname);
            var cm = grid.jqGrid('getGridParam', 'colModel');
            var retval = -1;
            $.each(cm, function () {
                if (this.name === columnName) {
                    retval = cm.indexOf(this);
                }
            });
            return retval;
        };

        jQuery("#setups").jqGrid({
            url: '@Url.Action("ListSystemParameters", "Admin")',
            editurl: '@Url.Action("UpdateSystemParameters", "Admin")',
            datatype: "json",
            colNames: [
                'Műveletek'
                , 'id'
                , 'Megnevezés'
                , 'Érték'
                , 'Leírás'
                , 'Nyilvános?'
            ],
            colModel: [
                {
                    "name": "act"
                    , "formatoptions": { "keys": false, "editbutton": true, "delbutton": true }
                    , "width": 60
                    , "formatter": "actions"
                    , "searchoptions": {}
                    , "index": "act"
                    , sortable: false
                    , search: false
                },
                {
                    name: 'Id', index: 'Id', hidden: true, sortable: false, editable: false,
                    editoptions: {
                        dataInit: function (element) { //mindenképpen kisül a beforeSelectRow előtt az inline edit, ez viszont szerencsére megelőzi,
                            $(this).jqGrid('getColProp', 'Public').formatoptions.disabled = false;
                        }
                    }
                },
                { name: 'Name', index: 'Name', width: 200, align: "left", editable: true, sortable: true },
                { name: 'Value', index: 'Value', width: 100, align: "right", editable: true, sortable: true },
                { name: 'Description', index: 'Description', width: 250, align: "left", editable: true, edittype: 'textarea', sortable: true },
                {
                    name: 'Public', index: 'Public', width: 50, align: "center", 
                    editable: true, edittype: 'checkbox', editoptions: { value: "True:False" },
                    searchoptions: { sopt: ['eq'], value: '"":Mind;True:Aktív;False:Inaktív' }, stype: 'select',
                    formatter: "checkbox", formatoptions: { disabled: true }, sortable: true
                }
            ],
            rowNum: 10,
            rowList: [10, 20, 30],
            toppager: true,
            pager: '#setupspager',
            sortname: 'Name',
            viewrecords: true,
            sortorder: "asc",
            caption: 'Rendszerparaméterek beállítása',
            rownumbers: true,
            gridview: true,
            hoverrows: true,
            scrollrows: false,
            shrinkToFit: false,
            height: '100%',
            width: '690'
            ,
            loadComplete: function () {
                var i = getColumnIndexByName('setups', 'Public');
                $("table#setups > tbody > tr.jqgrow > td:nth-child(" + (i + 1) + ") > input").click(function (e) {
                    var data = new Array(2);
                    data[0] = "{Id: '" + $(this).parents('tr').attr('id').replace(/^s*|s*$/g, "") + "',";
                    var value = ($(this).is(':checked')) ? "True" : "False";
                    data[1] = "isPublic: '" + value + "'}";
                    $.ajax({
                        url: '@Url.Action("UpdateSetupIspublic", "Admin")',
                        type: 'POST',
                        data: eval('(' + data[0] + data[1] + ')'),  //eval is string to json
                        beforeSend: function (jqXHR, textStatus) { jQuery('#grid_id').block({ message: '<h3>Betöltés…</h3>' }); },
                        complete: function (jqXHR, textStatus) { jQuery('#grid_id').unblock(); $("#setups").trigger("reloadGrid", [{ current: true }]); },
                        loadError: function (xhr, status, error) { alert(status + " " + error); }
                    });
                });                
            }
        });

        jQuery("#setups").jqGrid('navGrid', '#setupspager'
            , { edit: false, add: true, del: false, refresh: true, cloneToTop: true }
            , {} //prmEdit
            , { width: 500, recreateForm: true, closeAfterAdd: true } //prmAdd
            , {} //prmDel
            , {
                width: 600,
                multipleSearch: true,
                //multipleGroup: true,
                recreateFilter: true,
                //closeOnEscape: true,
                //closeAfterSearch: true,
                overlay: 0,
                afterRedraw: function () {
                    $('input.add-rule', this)//.button().val('Add new rule')
                        .attr('title', 'Új szabály hozzáadása');
                    //$('input.add-group', this)//.button().val('Add new group or rules')
                    //    .attr('title', 'Új szabálycsoport hozzáadása');
                    $('input.delete-rule', this)//.button().val('Delete rule')
                        .attr('title', 'Szabály törlése');
                    //$('input.delete-group', this)//.button().val('Delete group')
                    //    .attr('title', 'Szabálycsoport törlése');
                    //$(this).find("table.group:not(:first)").css({
                    //    borderWidth: "1px",
                    //    borderStyle: "dashed"
                    //});
                }
            } //prmSearch
            , {} //prmView
       ).jqGrid('filterToolbar', { stringResult: true, searchOnEnter: true, defaultSearch: "cn" });

    }(window));
</script>

}