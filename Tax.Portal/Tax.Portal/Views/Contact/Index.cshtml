@using Tax.Data.Models;

<div class="modal fade bs-modal-sm" id="warningmodal" tabindex="-1" role="dialog" aria-labelledby="" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            @*<div class="modal-header" style="color: orange; font-family: 'FrutigerNextPro-Bold'">*@
            <div class="modal-header" style="color: orange; font-family: Arial">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h3 class="modal-title">WARNING!</h3>
            </div>
            <div class="modal-body" style="color:orange">
                <p id="warningtext" style="text-align:center"></p>
            </div>
            <div class="modal-footer">
                <div class="text-center text-center">
                    <input type="button" class="btn btn-warning" data-dismiss="modal" value=" OK " />
                </div>
            </div>
        </div><!-- /.modal-content -->
    </div>
</div>

<div class="modal fade bs-modal-sm" id="errormodal" tabindex="-1" role="dialog" aria-labelledby="" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            @*<div class="modal-header" style="color: red; font-family: 'FrutigerNextPro-Bold'">*@
            <div class="modal-header" style="color: red; font-family: Arial">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h3 class="modal-title">ERROR!</h3>
            </div>
            <div class="modal-body" style="color:red">
                <p id="errortext" style="text-align:center"></p>
            </div>
            <div class="modal-footer">
                <div class="text-center text-center">
                    <input type="button" class="btn btn-danger" data-dismiss="modal" value=" OK " />
                </div>
            </div>
        </div><!-- /.modal-content -->
    </div>
</div>

<div class="modal fade bs-modal-sm" id="deletemodal" tabindex="-1" role="dialog" aria-labelledby="" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            @*<div class="modal-header" style="background: #00A1dE; color: #313131; font-family: 'FrutigerNextPro-Bold'; ">*@
            <div class="modal-header" style="background: #00A1dE; color: #313131; font-family: Arial; ">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h3 class="modal-title">ATTENTION!</h3>
            </div>
            <div class="modal-body">
                <p id="deletetext" style="text-align:center">Do you really want to delete this?</p>
            </div>
            <div class="modal-footer">
                <div class="text-center pull-left">
                    <input type="button" class="btn btn-default" data-dismiss="modal" value=" CANCEL " />
                </div>
                <div class="text-center pull-right">
                    <input id="deletebutton" type="button" class="btn btn-default" data-dismiss="modal" value=" DELETE " />
                </div>
            </div>
        </div><!-- /.modal-content -->
    </div>
</div>

<div class="row">    
    <div class="container grid">
        <div class="col-sm-12">
            <div class=" col-sm-12 col-xs-12" style="padding-left:0px">
                <div class="btn-group">
                    <a id="create" class="fa fa-plus fa-lg" style="padding-left:5px; padding-right:5px"></a>
                    <a id="edit" class="fa fa-pencil fa-lg" style="visibility:hidden; padding-right:5px"></a>
                    <a id="del" class="fa fa-trash-o fa-lg" style="visibility:hidden; padding-right:5px" data-toggle="modal" data-target="#deletemodal"></a>
                </div>
                <table id="contacts" class="display"><tr><td /></tr></table>
                <div id="contactspager"></div>
            </div>
        </div>
    </div>
</div>

<input id="rowid" style="visibility: hidden" /> 

@section Scripts {
    @Scripts.Render("~/Scripts/jqgrid")

<script type="text/javascript">
    var getColumnIndexByName = function (gridname, columnName) {
        var grid = $("#" + gridname);
        var cm = grid.jqGrid('getGridParam', 'colModel');
        var retval = -1;
        $.each(cm, function () {
            if (this.name === columnName) {
                retval = cm.indexOf(this);
            }
        });
        return retval;
    };

    numberSearchOptions = ['eq', 'ne', 'lt', 'le', 'gt', 'ge'];// 'nu', 'nn', 'in', 'ni'],

    numberTemplate = {
        formatter: 'integer', align: 'right', sorttype: 'number',
        searchoptions: { searchhidden: true, sopt: numberSearchOptions }
    };

    myDefaultSearch = 'cn';

    var ids = [];

    jQuery("#contacts").jqGrid({
        url: '@Url.Action("ListContacts", "Contact")',
        datatype: "json",
        ajaxSelectOptions: { type: "GET" }, //ezzel megy a lenyíló az advanced search-ben
        loadError: function (jqXHR, textStatus, errorThrown) {
            $('#errortext').text(jqXHR.responseText);
            $('#errormodal').modal({ show: true });
        },
        colNames: [
            'id'
            , 'Status'
            , 'First name'
            , 'Last name'
            , 'Department'
            , 'Position'
            , 'Phone'
            , 'Mobile'
            , 'E-mail'
            , 'Tags'
        ],
        colModel: [
            { name: 'Id', index: 'Id', hidden: true }, //nem látszik, nem kereshető, nem vihető fel
            {
                name: 'Status', index: 'Status', width: 80, align: "left", hidden: false, sortable: true,
                search: true, stype: 'select',
                searchoptions: {
                    searchhidden: true,
                    sopt: ['eq', 'ne'],
                    dataUrl: '@Url.Action("ListNewsStatus", "New")?isSearch=' + true,
                    buildSelect: function (result) { return result; }
                },
                editable: false
            },
            {
                name: 'First_name', index: 'First_name', width: 90, align: "left", hidden: false,
                sortable: true, search: true, editable: false,
                cellattr: function (rowId, tv, rawObject, cm, rdata) { return 'style="white-space: normal;"' },
                formatter: function (v) { return '<div style="max-height: 100px">' + v + '</div>'; }
            },
            {
                name: 'Last_name', index: 'Last_name', width: 100, align: "left", hidden: false,
                sortable: true, search: true, editable: false,
                cellattr: function (rowId, tv, rawObject, cm, rdata) { return 'style="white-space: normal;"' },
                formatter: function (v) { return '<div style="max-height: 100px">' + v + '</div>'; }
            },
            {
                name: 'Department', index: 'Department', width: 200, align: "left", hidden: false,
                sortable: true, search: true, editable: false,
                cellattr: function (rowId, tv, rawObject, cm, rdata) { return 'style="white-space: normal;"' },
                formatter: function (v) { return '<div style="max-height: 100px">' + v + '</div>'; }
            },
            {
                name: 'Position', index: 'Position', width: 150, align: "left", hidden: false,
                sortable: true, search: true, editable: false,
                cellattr: function (rowId, tv, rawObject, cm, rdata) { return 'style="white-space: normal;"' },
                formatter: function (v) { return '<div style="max-height: 100px">' + v + '</div>'; }
            },
            { name: 'Phone', index: 'Phone', width: 80, align: "left", hidden: false, sortable: true, search: true, editable: false },
            { name: 'Mobile', index: 'Mobile', width: 80, align: "left", hidden: false, sortable: true, search: true, editable: false },
            { name: 'E-mail', index: 'E-mail', width: 150, align: "left", hidden: false, sortable: true, search: true, editable: false },
            {
                name: 'Tags', index: 'Tags', width: 190, align: "left", hidden: false,
                sortable: true, search: true, editable: false,
                cellattr: function (rowId, tv, rawObject, cm, rdata) { return 'style="white-space: normal;"' },
                formatter: function (v) { return '<div style="max-height: 100px">' + v + '</div>'; }
            }
        ],
        rowNum: 20,
        rowList: [20, 40, 60],
        toppager: true,
        pager: '#contactspager',
        sortname: 'Status,First_name',
        viewrecords: true,
        sortorder: "asc",
        caption: 'Contacts',
        rownumbers: false,
        gridview: true,
        hoverrows: true,
        scrollrows: true,
        shrinkToFit: false,
        height: '100%',
        //width: '800',
        autowidth: true,
        onSelectRow: function (rowid) {
            $("#rowid").val(rowid);
            switch ($(this).getCell(rowid, 'Status')) {
                case 'Published':
                case 'Kiadva':
                    $("#Publish").hide().css({ visibility: "hidden" });
                    $("#CallBack").show().css({ visibility: "visible" });
                    $("#edit").hide().css({ visibility: "hidden" });
                    $("#del").hide().css({ visibility: "hidden" });
                    break;
                case 'Under editing':
                case 'Szerkesztés alatt':
                    $("#Publish").show().css({ visibility: "visible" });
                    $("#CallBack").hide().css({ visibility: "hidden" });
                    $("#edit").show().css({ visibility: "visible" });
                    $("#del").show().css({ visibility: "visible" });
                    break;
                case 'Unpublished':
                case 'Visszavonva':
                    $("#Publish").show().css({ visibility: "visible" });
                    $("#CallBack").hide().css({ visibility: "hidden" });
                    $("#edit").hide().css({ visibility: "hidden" });
                    $("#del").hide().css({ visibility: "hidden" });
                    break;
                default:
                    break;
            }
        },
        loadComplete: function () {
            $("#Publish").hide().css({ visibility: "hidden" });
            $("#CallBack").hide().css({ visibility: "hidden" });
            $("#edit").hide().css({ visibility: "hidden" });
            $("#del").hide().css({ visibility: "hidden" });
        }
    });

    jQuery("#contacts").jqGrid('navGrid', '#contactspager'
        , { edit: false, add: false, del: false, refresh: true, cloneToTop: true }
        , {} //prmedit
        , {} //prmadd
        , {} //prmdel
        , {
            width: 600,
            multiplesearch: true,
            recreatefilter: true,
            closeonescape: true,
            closeaftersearch: true,
            overlay: 0,
            afterredraw: function () {
                $('input.add-rule', this)//.button().val('add new rule')
                    .attr('title', 'add new search rule');
                $('input.delete-rule', this)//.button().val('delete rule')
                    .attr('title', 'delete rule');
            }
        } //prmsearch
        , {} //prmview
    )
    .jqGrid('filterToolbar', { stringResult: true, searchOnEnter: true, defaultSearch: "cn" })

    $('#Publish').click(function () {
        $.ajax({
            url: '@Url.Action("UpdateContactStatus", "Contact")?id=' + $("#rowid").val() + '&to=Published',
            type: 'POST',
            beforeSend: function (jqXHR, textStatus) { jQuery('#contacts').block({ message: '<h3>Wait…</h3>' }); },
            complete: function (jqXHR, textStatus) {
                var str = JSON.parse(jqXHR.responseText);
                if (!str.success) {
                    if (str.error) {
                        $('#errortext').text(str.response);
                        $('#errormodal').modal({ show: true });
                    }
                    else {
                        $('#warningtext').text(str.response);
                        $('#warningmodal').modal({ show: true });
                    }
                }
                jQuery('#contacts').unblock();
                $("#contacts").trigger("reloadGrid", [{ current: true }]);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                $('#errortext').text(jqXHR.responseText);
                $('#errormodal').modal({ show: true });
            }
        });
    });
    $('#CallBack').click(function () {
        $.ajax({
            url: '@Url.Action("UpdateContactStatus", "Contact")?id=' + $("#rowid").val() + '&to=Unpublished',
            type: 'POST',
            beforeSend: function (jqXHR, textStatus) { jQuery('#contacts').block({ message: '<h3>Wait…</h3>' }); },
            complete: function (jqXHR, textStatus) {
                var str = JSON.parse(jqXHR.responseText);
                if (!str.success) {
                    if (str.error) {
                        $('#errortext').text(str.response);
                        $('#errormodal').modal({ show: true });
                    }
                    else {
                        $('#warningtext').text(str.response);
                        $('#warningmodal').modal({ show: true });
                    }
                }
                jQuery('#contacts').unblock();
                $("#contacts").trigger("reloadGrid", [{ current: true }]);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                $('#errortext').text(jqXHR.responseText);
                $('#errormodal').modal({ show: true });
            }
        });
    });
    $('#deletebutton').click(function () {
        $.ajax({
            url: '@Url.Action("DeleteContact", "Contact")?id=' + $("#rowid").val(),
            type: 'POST',
            beforeSend: function (jqXHR, textStatus) { jQuery('#contacts').block({ message: '<h3>Wait…</h3>' }); },
            complete: function (jqXHR, textStatus) {
                var str = JSON.parse(jqXHR.responseText);
                if (!str.success) {
                    if (str.error) {
                        $('#errortext').text(str.response);
                        $('#errormodal').modal({ show: true });
                    }
                    else {
                        $('#warningtext').text(str.response);
                        $('#warningmodal').modal({ show: true });
                    }
                }
                jQuery('#contacts').unblock();
                $("#contacts").trigger("reloadGrid", [{ current: true }]);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                $('#errortext').text(jqXHR.responseText);
                $('#errormodal').modal({ show: true });
            }
        });
    });

    $('#create').click(function () {
        document.location.href = '@Url.Action("Create", "Contact")';
    });

    $('#edit').click(function () {
        document.location.href = '@Url.Action("Edit", "Contact")?id=' + $("#rowid").val();
    });

    </script>

}