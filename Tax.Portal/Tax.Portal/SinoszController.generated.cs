// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Tax.Portal.Controllers
{
    public partial class SinoszController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public SinoszController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected SinoszController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Index()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult ListSinoszUsers()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListSinoszUsers);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateSinoszUsers()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateSinoszUsers);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult CreateSinoszId()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CreateSinoszId);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Edit()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Edit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult ListAddresses()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListAddresses);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateAddresses()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateAddresses);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult ListLogs()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListLogs);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult ListDocuments()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListDocuments);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult UpdateDocuments()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.UpdateDocuments);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetDocumentTypeParams()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetDocumentTypeParams);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateDocumnetStatus()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDocumnetStatus);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult ListCards()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListCards);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateCards()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateCards);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult ListFiles()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListFiles);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateFiles()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateFiles);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteSinoszUser()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteSinoszUser);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult ListDocumenttypes()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListDocumenttypes);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateisFixsum()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateisFixsum);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateisMembershipCost()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateisMembershipCost);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateisCardCost()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateisCardCost);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateisEnabled()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateisEnabled);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateDocumenttypes()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDocumenttypes);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult ListOrganizationParams()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListOrganizationParams);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateOrganizations()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateOrganizations);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult ListAddressTypeParams()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListAddressTypeParams);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateAddressTypes()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateAddressTypes);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult ListFileTypeParams()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListFileTypeParams);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateFileTypes()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateFileTypes);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult ListPensionTypeParams()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListPensionTypeParams);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdatePensionTypes()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdatePensionTypes);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult ListNewsParams()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListNewsParams);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateNews()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNews);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetUserPictId()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetUserPictId);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ListSinoszUsersForList()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ListSinoszUsersForList);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ListAccountingDocumentsForList()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ListAccountingDocumentsForList);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public SinoszController Actions { get { return MVC.Sinosz; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Sinosz";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Sinosz";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string ListSinoszUsers = "ListSinoszUsers";
            public readonly string UpdateSinoszUsers = "UpdateSinoszUsers";
            public readonly string CreateSinoszId = "CreateSinoszId";
            public readonly string Edit = "Edit";
            public readonly string ListAddresses = "ListAddresses";
            public readonly string UpdateAddresses = "UpdateAddresses";
            public readonly string ListLogs = "ListLogs";
            public readonly string ListDocuments = "ListDocuments";
            public readonly string UpdateDocuments = "UpdateDocuments";
            public readonly string GetDocumentTypeParams = "GetDocumentTypeParams";
            public readonly string UpdateDocumnetStatus = "UpdateDocumnetStatus";
            public readonly string ListCards = "ListCards";
            public readonly string UpdateCards = "UpdateCards";
            public readonly string ListFiles = "ListFiles";
            public readonly string UpdateFiles = "UpdateFiles";
            public readonly string DeleteSinoszUser = "DeleteSinoszUser";
            public readonly string Parameter = "Parameter";
            public readonly string ListDocumenttypes = "ListDocumenttypes";
            public readonly string UpdateisFixsum = "UpdateisFixsum";
            public readonly string UpdateisMembershipCost = "UpdateisMembershipCost";
            public readonly string UpdateisCardCost = "UpdateisCardCost";
            public readonly string UpdateisEnabled = "UpdateisEnabled";
            public readonly string UpdateDocumenttypes = "UpdateDocumenttypes";
            public readonly string ListOrganizationParams = "ListOrganizationParams";
            public readonly string UpdateOrganizations = "UpdateOrganizations";
            public readonly string ListAddressTypeParams = "ListAddressTypeParams";
            public readonly string UpdateAddressTypes = "UpdateAddressTypes";
            public readonly string ListFileTypeParams = "ListFileTypeParams";
            public readonly string UpdateFileTypes = "UpdateFileTypes";
            public readonly string ListPensionTypeParams = "ListPensionTypeParams";
            public readonly string UpdatePensionTypes = "UpdatePensionTypes";
            public readonly string ListNewsParams = "ListNewsParams";
            public readonly string UpdateNews = "UpdateNews";
            public readonly string GetUserPictId = "GetUserPictId";
            public readonly string New = "New";
            public readonly string List = "List";
            public readonly string ListSinoszUsersForList = "ListSinoszUsersForList";
            public readonly string ListAccountingDocumentsForList = "ListAccountingDocumentsForList";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string ListSinoszUsers = "ListSinoszUsers";
            public const string UpdateSinoszUsers = "UpdateSinoszUsers";
            public const string CreateSinoszId = "CreateSinoszId";
            public const string Edit = "Edit";
            public const string ListAddresses = "ListAddresses";
            public const string UpdateAddresses = "UpdateAddresses";
            public const string ListLogs = "ListLogs";
            public const string ListDocuments = "ListDocuments";
            public const string UpdateDocuments = "UpdateDocuments";
            public const string GetDocumentTypeParams = "GetDocumentTypeParams";
            public const string UpdateDocumnetStatus = "UpdateDocumnetStatus";
            public const string ListCards = "ListCards";
            public const string UpdateCards = "UpdateCards";
            public const string ListFiles = "ListFiles";
            public const string UpdateFiles = "UpdateFiles";
            public const string DeleteSinoszUser = "DeleteSinoszUser";
            public const string Parameter = "Parameter";
            public const string ListDocumenttypes = "ListDocumenttypes";
            public const string UpdateisFixsum = "UpdateisFixsum";
            public const string UpdateisMembershipCost = "UpdateisMembershipCost";
            public const string UpdateisCardCost = "UpdateisCardCost";
            public const string UpdateisEnabled = "UpdateisEnabled";
            public const string UpdateDocumenttypes = "UpdateDocumenttypes";
            public const string ListOrganizationParams = "ListOrganizationParams";
            public const string UpdateOrganizations = "UpdateOrganizations";
            public const string ListAddressTypeParams = "ListAddressTypeParams";
            public const string UpdateAddressTypes = "UpdateAddressTypes";
            public const string ListFileTypeParams = "ListFileTypeParams";
            public const string UpdateFileTypes = "UpdateFileTypes";
            public const string ListPensionTypeParams = "ListPensionTypeParams";
            public const string UpdatePensionTypes = "UpdatePensionTypes";
            public const string ListNewsParams = "ListNewsParams";
            public const string UpdateNews = "UpdateNews";
            public const string GetUserPictId = "GetUserPictId";
            public const string New = "New";
            public const string List = "List";
            public const string ListSinoszUsersForList = "ListSinoszUsersForList";
            public const string ListAccountingDocumentsForList = "ListAccountingDocumentsForList";
        }


        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index
        {
            public readonly string SinoszId = "SinoszId";
        }
        static readonly ActionParamsClass_ListSinoszUsers s_params_ListSinoszUsers = new ActionParamsClass_ListSinoszUsers();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListSinoszUsers ListSinoszUsersParams { get { return s_params_ListSinoszUsers; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListSinoszUsers
        {
            public readonly string grid = "grid";
            public readonly string isInactivator = "isInactivator";
            public readonly string SinoszId = "SinoszId";
        }
        static readonly ActionParamsClass_UpdateSinoszUsers s_params_UpdateSinoszUsers = new ActionParamsClass_UpdateSinoszUsers();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateSinoszUsers UpdateSinoszUsersParams { get { return s_params_UpdateSinoszUsers; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateSinoszUsers
        {
            public readonly string id = "id";
            public readonly string oper = "oper";
            public readonly string SinoszUserName = "SinoszUserName";
            public readonly string OrganizationName = "OrganizationName";
            public readonly string PostCode = "PostCode";
            public readonly string HomeAddress = "HomeAddress";
            public readonly string BirthDate = "BirthDate";
            public readonly string BirthPlace = "BirthPlace";
            public readonly string MothersName = "MothersName";
            public readonly string GenusName = "GenusName";
            public readonly string EnterDate = "EnterDate";
            public readonly string HearingStatusName = "HearingStatusName";
            public readonly string PensionTypeName = "PensionTypeName";
            public readonly string DecreeNumber = "DecreeNumber";
            public readonly string NationText = "NationText";
        }
        static readonly ActionParamsClass_CreateSinoszId s_params_CreateSinoszId = new ActionParamsClass_CreateSinoszId();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateSinoszId CreateSinoszIdParams { get { return s_params_CreateSinoszId; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateSinoszId
        {
            public readonly string userId = "userId";
        }
        static readonly ActionParamsClass_Edit s_params_Edit = new ActionParamsClass_Edit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Edit EditParams { get { return s_params_Edit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Edit
        {
            public readonly string UserId = "UserId";
            public readonly string KontaktUserId = "KontaktUserId";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_ListAddresses s_params_ListAddresses = new ActionParamsClass_ListAddresses();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListAddresses ListAddressesParams { get { return s_params_ListAddresses; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListAddresses
        {
            public readonly string grid = "grid";
            public readonly string uid = "uid";
        }
        static readonly ActionParamsClass_UpdateAddresses s_params_UpdateAddresses = new ActionParamsClass_UpdateAddresses();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateAddresses UpdateAddressesParams { get { return s_params_UpdateAddresses; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateAddresses
        {
            public readonly string id = "id";
            public readonly string oper = "oper";
            public readonly string r = "r";
            public readonly string AddressTypeName = "AddressTypeName";
            public readonly string uid = "uid";
        }
        static readonly ActionParamsClass_ListLogs s_params_ListLogs = new ActionParamsClass_ListLogs();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListLogs ListLogsParams { get { return s_params_ListLogs; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListLogs
        {
            public readonly string grid = "grid";
            public readonly string uid = "uid";
        }
        static readonly ActionParamsClass_ListDocuments s_params_ListDocuments = new ActionParamsClass_ListDocuments();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListDocuments ListDocumentsParams { get { return s_params_ListDocuments; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListDocuments
        {
            public readonly string grid = "grid";
            public readonly string uid = "uid";
        }
        static readonly ActionParamsClass_UpdateDocuments s_params_UpdateDocuments = new ActionParamsClass_UpdateDocuments();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateDocuments UpdateDocumentsParams { get { return s_params_UpdateDocuments; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateDocuments
        {
            public readonly string id = "id";
            public readonly string oper = "oper";
            public readonly string a = "a";
            public readonly string AccountingTypeName = "AccountingTypeName";
            public readonly string uid = "uid";
        }
        static readonly ActionParamsClass_GetDocumentTypeParams s_params_GetDocumentTypeParams = new ActionParamsClass_GetDocumentTypeParams();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetDocumentTypeParams GetDocumentTypeParamsParams { get { return s_params_GetDocumentTypeParams; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetDocumentTypeParams
        {
            public readonly string typeId = "typeId";
        }
        static readonly ActionParamsClass_UpdateDocumnetStatus s_params_UpdateDocumnetStatus = new ActionParamsClass_UpdateDocumnetStatus();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateDocumnetStatus UpdateDocumnetStatusParams { get { return s_params_UpdateDocumnetStatus; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateDocumnetStatus
        {
            public readonly string docid = "docid";
            public readonly string status = "status";
        }
        static readonly ActionParamsClass_ListCards s_params_ListCards = new ActionParamsClass_ListCards();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListCards ListCardsParams { get { return s_params_ListCards; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListCards
        {
            public readonly string grid = "grid";
            public readonly string uid = "uid";
        }
        static readonly ActionParamsClass_UpdateCards s_params_UpdateCards = new ActionParamsClass_UpdateCards();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateCards UpdateCardsParams { get { return s_params_UpdateCards; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateCards
        {
            public readonly string id = "id";
            public readonly string oper = "oper";
            public readonly string r = "r";
            public readonly string CardStatusName = "CardStatusName";
            public readonly string uid = "uid";
        }
        static readonly ActionParamsClass_ListFiles s_params_ListFiles = new ActionParamsClass_ListFiles();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListFiles ListFilesParams { get { return s_params_ListFiles; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListFiles
        {
            public readonly string grid = "grid";
            public readonly string uid = "uid";
        }
        static readonly ActionParamsClass_UpdateFiles s_params_UpdateFiles = new ActionParamsClass_UpdateFiles();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateFiles UpdateFilesParams { get { return s_params_UpdateFiles; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateFiles
        {
            public readonly string id = "id";
            public readonly string oper = "oper";
            public readonly string r = "r";
            public readonly string FileTypeName = "FileTypeName";
            public readonly string uid = "uid";
        }
        static readonly ActionParamsClass_DeleteSinoszUser s_params_DeleteSinoszUser = new ActionParamsClass_DeleteSinoszUser();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteSinoszUser DeleteSinoszUserParams { get { return s_params_DeleteSinoszUser; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteSinoszUser
        {
            public readonly string userId = "userId";
        }
        static readonly ActionParamsClass_ListDocumenttypes s_params_ListDocumenttypes = new ActionParamsClass_ListDocumenttypes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListDocumenttypes ListDocumenttypesParams { get { return s_params_ListDocumenttypes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListDocumenttypes
        {
            public readonly string grid = "grid";
        }
        static readonly ActionParamsClass_UpdateisFixsum s_params_UpdateisFixsum = new ActionParamsClass_UpdateisFixsum();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateisFixsum UpdateisFixsumParams { get { return s_params_UpdateisFixsum; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateisFixsum
        {
            public readonly string doctypeid = "doctypeid";
            public readonly string value = "value";
        }
        static readonly ActionParamsClass_UpdateisMembershipCost s_params_UpdateisMembershipCost = new ActionParamsClass_UpdateisMembershipCost();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateisMembershipCost UpdateisMembershipCostParams { get { return s_params_UpdateisMembershipCost; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateisMembershipCost
        {
            public readonly string doctypeid = "doctypeid";
            public readonly string value = "value";
        }
        static readonly ActionParamsClass_UpdateisCardCost s_params_UpdateisCardCost = new ActionParamsClass_UpdateisCardCost();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateisCardCost UpdateisCardCostParams { get { return s_params_UpdateisCardCost; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateisCardCost
        {
            public readonly string doctypeid = "doctypeid";
            public readonly string value = "value";
        }
        static readonly ActionParamsClass_UpdateisEnabled s_params_UpdateisEnabled = new ActionParamsClass_UpdateisEnabled();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateisEnabled UpdateisEnabledParams { get { return s_params_UpdateisEnabled; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateisEnabled
        {
            public readonly string doctypeid = "doctypeid";
            public readonly string value = "value";
        }
        static readonly ActionParamsClass_UpdateDocumenttypes s_params_UpdateDocumenttypes = new ActionParamsClass_UpdateDocumenttypes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateDocumenttypes UpdateDocumenttypesParams { get { return s_params_UpdateDocumenttypes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateDocumenttypes
        {
            public readonly string id = "id";
            public readonly string oper = "oper";
            public readonly string r = "r";
            public readonly string RelationshipName = "RelationshipName";
        }
        static readonly ActionParamsClass_ListOrganizationParams s_params_ListOrganizationParams = new ActionParamsClass_ListOrganizationParams();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListOrganizationParams ListOrganizationParamsParams { get { return s_params_ListOrganizationParams; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListOrganizationParams
        {
            public readonly string grid = "grid";
        }
        static readonly ActionParamsClass_UpdateOrganizations s_params_UpdateOrganizations = new ActionParamsClass_UpdateOrganizations();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateOrganizations UpdateOrganizationsParams { get { return s_params_UpdateOrganizations; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateOrganizations
        {
            public readonly string id = "id";
            public readonly string oper = "oper";
            public readonly string r = "r";
            public readonly string Postcode = "Postcode";
            public readonly string UpperOrganization = "UpperOrganization";
        }
        static readonly ActionParamsClass_ListAddressTypeParams s_params_ListAddressTypeParams = new ActionParamsClass_ListAddressTypeParams();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListAddressTypeParams ListAddressTypeParamsParams { get { return s_params_ListAddressTypeParams; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListAddressTypeParams
        {
            public readonly string grid = "grid";
        }
        static readonly ActionParamsClass_UpdateAddressTypes s_params_UpdateAddressTypes = new ActionParamsClass_UpdateAddressTypes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateAddressTypes UpdateAddressTypesParams { get { return s_params_UpdateAddressTypes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateAddressTypes
        {
            public readonly string id = "id";
            public readonly string oper = "oper";
            public readonly string r = "r";
        }
        static readonly ActionParamsClass_ListFileTypeParams s_params_ListFileTypeParams = new ActionParamsClass_ListFileTypeParams();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListFileTypeParams ListFileTypeParamsParams { get { return s_params_ListFileTypeParams; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListFileTypeParams
        {
            public readonly string grid = "grid";
        }
        static readonly ActionParamsClass_UpdateFileTypes s_params_UpdateFileTypes = new ActionParamsClass_UpdateFileTypes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateFileTypes UpdateFileTypesParams { get { return s_params_UpdateFileTypes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateFileTypes
        {
            public readonly string id = "id";
            public readonly string oper = "oper";
            public readonly string r = "r";
        }
        static readonly ActionParamsClass_ListPensionTypeParams s_params_ListPensionTypeParams = new ActionParamsClass_ListPensionTypeParams();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListPensionTypeParams ListPensionTypeParamsParams { get { return s_params_ListPensionTypeParams; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListPensionTypeParams
        {
            public readonly string grid = "grid";
        }
        static readonly ActionParamsClass_UpdatePensionTypes s_params_UpdatePensionTypes = new ActionParamsClass_UpdatePensionTypes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdatePensionTypes UpdatePensionTypesParams { get { return s_params_UpdatePensionTypes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdatePensionTypes
        {
            public readonly string id = "id";
            public readonly string oper = "oper";
            public readonly string r = "r";
        }
        static readonly ActionParamsClass_ListNewsParams s_params_ListNewsParams = new ActionParamsClass_ListNewsParams();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListNewsParams ListNewsParamsParams { get { return s_params_ListNewsParams; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListNewsParams
        {
            public readonly string grid = "grid";
        }
        static readonly ActionParamsClass_UpdateNews s_params_UpdateNews = new ActionParamsClass_UpdateNews();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateNews UpdateNewsParams { get { return s_params_UpdateNews; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateNews
        {
            public readonly string id = "id";
            public readonly string oper = "oper";
            public readonly string r = "r";
            public readonly string NewsTypeName = "NewsTypeName";
        }
        static readonly ActionParamsClass_GetUserPictId s_params_GetUserPictId = new ActionParamsClass_GetUserPictId();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetUserPictId GetUserPictIdParams { get { return s_params_GetUserPictId; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetUserPictId
        {
            public readonly string suserId = "suserId";
        }
        static readonly ActionParamsClass_ListSinoszUsersForList s_params_ListSinoszUsersForList = new ActionParamsClass_ListSinoszUsersForList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListSinoszUsersForList ListSinoszUsersForListParams { get { return s_params_ListSinoszUsersForList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListSinoszUsersForList
        {
            public readonly string grid = "grid";
            public readonly string Output = "Output";
        }
        static readonly ActionParamsClass_ListAccountingDocumentsForList s_params_ListAccountingDocumentsForList = new ActionParamsClass_ListAccountingDocumentsForList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListAccountingDocumentsForList ListAccountingDocumentsForListParams { get { return s_params_ListAccountingDocumentsForList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListAccountingDocumentsForList
        {
            public readonly string grid = "grid";
            public readonly string Output = "Output";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Edit = "Edit";
                public readonly string Index = "Index";
                public readonly string List = "List";
                public readonly string New = "New";
                public readonly string Parameter = "Parameter";
                public readonly string Print = "Print";
                public readonly string PrintCommContract = "PrintCommContract";
                public readonly string PrintDevContract = "PrintDevContract";
            }
            public readonly string Edit = "~/Views/Sinosz/Edit.cshtml";
            public readonly string Index = "~/Views/Sinosz/Index.cshtml";
            public readonly string List = "~/Views/Sinosz/List.cshtml";
            public readonly string New = "~/Views/Sinosz/New.cshtml";
            public readonly string Parameter = "~/Views/Sinosz/Parameter.cshtml";
            public readonly string Print = "~/Views/Sinosz/Print.cshtml";
            public readonly string PrintCommContract = "~/Views/Sinosz/PrintCommContract.cshtml";
            public readonly string PrintDevContract = "~/Views/Sinosz/PrintDevContract.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_SinoszController : Tax.Portal.Controllers.SinoszController
    {
        public T4MVC_SinoszController() : base(Dummy.Instance) { }

        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string SinoszId);

        public override System.Web.Mvc.ActionResult Index(string SinoszId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "SinoszId", SinoszId);
            IndexOverride(callInfo, SinoszId);
            return callInfo;
        }

        partial void ListSinoszUsersOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, JQGrid.Helpers.GridSettings grid, bool? isInactivator, string SinoszId);

        public override System.Web.Mvc.JsonResult ListSinoszUsers(JQGrid.Helpers.GridSettings grid, bool? isInactivator, string SinoszId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListSinoszUsers);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "grid", grid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isInactivator", isInactivator);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "SinoszId", SinoszId);
            ListSinoszUsersOverride(callInfo, grid, isInactivator, SinoszId);
            return callInfo;
        }

        partial void UpdateSinoszUsersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string oper, string SinoszUserName, string OrganizationName, string PostCode, string HomeAddress, System.DateTime BirthDate, string BirthPlace, string MothersName, string GenusName, System.DateTime EnterDate, string HearingStatusName, string PensionTypeName, string DecreeNumber, string NationText);

        public override System.Web.Mvc.ActionResult UpdateSinoszUsers(string id, string oper, string SinoszUserName, string OrganizationName, string PostCode, string HomeAddress, System.DateTime BirthDate, string BirthPlace, string MothersName, string GenusName, System.DateTime EnterDate, string HearingStatusName, string PensionTypeName, string DecreeNumber, string NationText)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateSinoszUsers);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "oper", oper);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "SinoszUserName", SinoszUserName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "OrganizationName", OrganizationName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "PostCode", PostCode);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "HomeAddress", HomeAddress);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "BirthDate", BirthDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "BirthPlace", BirthPlace);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "MothersName", MothersName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "GenusName", GenusName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "EnterDate", EnterDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "HearingStatusName", HearingStatusName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "PensionTypeName", PensionTypeName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "DecreeNumber", DecreeNumber);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "NationText", NationText);
            UpdateSinoszUsersOverride(callInfo, id, oper, SinoszUserName, OrganizationName, PostCode, HomeAddress, BirthDate, BirthPlace, MothersName, GenusName, EnterDate, HearingStatusName, PensionTypeName, DecreeNumber, NationText);
            return callInfo;
        }

        partial void CreateSinoszIdOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, System.Guid userId);

        public override System.Web.Mvc.JsonResult CreateSinoszId(System.Guid userId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CreateSinoszId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userId", userId);
            CreateSinoszIdOverride(callInfo, userId);
            return callInfo;
        }

        partial void EditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid? UserId, System.Guid? KontaktUserId);

        public override System.Web.Mvc.ActionResult Edit(System.Guid? UserId, System.Guid? KontaktUserId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Edit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "UserId", UserId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "KontaktUserId", KontaktUserId);
            EditOverride(callInfo, UserId, KontaktUserId);
            return callInfo;
        }

        partial void EditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Tax.Portal.Models.SinoszUserViewModel model);

        public override System.Web.Mvc.ActionResult Edit(Tax.Portal.Models.SinoszUserViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Edit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            EditOverride(callInfo, model);
            return callInfo;
        }

        partial void ListAddressesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, JQGrid.Helpers.GridSettings grid, System.Guid uid);

        public override System.Web.Mvc.JsonResult ListAddresses(JQGrid.Helpers.GridSettings grid, System.Guid uid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListAddresses);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "grid", grid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "uid", uid);
            ListAddressesOverride(callInfo, grid, uid);
            return callInfo;
        }

        partial void UpdateAddressesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string oper, Tax.Data.Models.Address r, string AddressTypeName, string uid);

        public override System.Web.Mvc.ActionResult UpdateAddresses(string id, string oper, Tax.Data.Models.Address r, string AddressTypeName, string uid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateAddresses);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "oper", oper);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "r", r);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "AddressTypeName", AddressTypeName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "uid", uid);
            UpdateAddressesOverride(callInfo, id, oper, r, AddressTypeName, uid);
            return callInfo;
        }

        partial void ListLogsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, JQGrid.Helpers.GridSettings grid, System.Guid uid);

        public override System.Web.Mvc.JsonResult ListLogs(JQGrid.Helpers.GridSettings grid, System.Guid uid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListLogs);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "grid", grid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "uid", uid);
            ListLogsOverride(callInfo, grid, uid);
            return callInfo;
        }

        partial void ListDocumentsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, JQGrid.Helpers.GridSettings grid, System.Guid uid);

        public override System.Web.Mvc.JsonResult ListDocuments(JQGrid.Helpers.GridSettings grid, System.Guid uid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListDocuments);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "grid", grid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "uid", uid);
            ListDocumentsOverride(callInfo, grid, uid);
            return callInfo;
        }

        partial void UpdateDocumentsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string id, string oper, Tax.Data.Models.AccountingDocument a, string AccountingTypeName, string uid);

        public override System.Web.Mvc.JsonResult UpdateDocuments(string id, string oper, Tax.Data.Models.AccountingDocument a, string AccountingTypeName, string uid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.UpdateDocuments);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "oper", oper);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "a", a);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "AccountingTypeName", AccountingTypeName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "uid", uid);
            UpdateDocumentsOverride(callInfo, id, oper, a, AccountingTypeName, uid);
            return callInfo;
        }

        partial void GetDocumentTypeParamsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, System.Guid typeId);

        public override System.Web.Mvc.JsonResult GetDocumentTypeParams(System.Guid typeId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetDocumentTypeParams);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "typeId", typeId);
            GetDocumentTypeParamsOverride(callInfo, typeId);
            return callInfo;
        }

        partial void UpdateDocumnetStatusOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string docid, bool status);

        public override System.Web.Mvc.ActionResult UpdateDocumnetStatus(string docid, bool status)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDocumnetStatus);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "docid", docid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "status", status);
            UpdateDocumnetStatusOverride(callInfo, docid, status);
            return callInfo;
        }

        partial void ListCardsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, JQGrid.Helpers.GridSettings grid, string uid);

        public override System.Web.Mvc.JsonResult ListCards(JQGrid.Helpers.GridSettings grid, string uid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListCards);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "grid", grid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "uid", uid);
            ListCardsOverride(callInfo, grid, uid);
            return callInfo;
        }

        partial void UpdateCardsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string oper, Tax.Data.Models.Card r, string CardStatusName, string uid);

        public override System.Web.Mvc.ActionResult UpdateCards(string id, string oper, Tax.Data.Models.Card r, string CardStatusName, string uid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateCards);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "oper", oper);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "r", r);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "CardStatusName", CardStatusName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "uid", uid);
            UpdateCardsOverride(callInfo, id, oper, r, CardStatusName, uid);
            return callInfo;
        }

        partial void ListFilesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, JQGrid.Helpers.GridSettings grid, string uid);

        public override System.Web.Mvc.JsonResult ListFiles(JQGrid.Helpers.GridSettings grid, string uid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListFiles);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "grid", grid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "uid", uid);
            ListFilesOverride(callInfo, grid, uid);
            return callInfo;
        }

        partial void UpdateFilesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string oper, Tax.Data.Models.AttachedFile r, string FileTypeName, string uid);

        public override System.Web.Mvc.ActionResult UpdateFiles(string id, string oper, Tax.Data.Models.AttachedFile r, string FileTypeName, string uid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateFiles);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "oper", oper);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "r", r);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "FileTypeName", FileTypeName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "uid", uid);
            UpdateFilesOverride(callInfo, id, oper, r, FileTypeName, uid);
            return callInfo;
        }

        partial void DeleteSinoszUserOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid userId);

        public override System.Web.Mvc.ActionResult DeleteSinoszUser(System.Guid userId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteSinoszUser);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userId", userId);
            DeleteSinoszUserOverride(callInfo, userId);
            return callInfo;
        }

        partial void ParameterOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        public override System.Web.Mvc.ActionResult Parameter()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Parameter);
            ParameterOverride(callInfo);
            return callInfo;
        }

        partial void ListDocumenttypesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, JQGrid.Helpers.GridSettings grid);

        public override System.Web.Mvc.JsonResult ListDocumenttypes(JQGrid.Helpers.GridSettings grid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListDocumenttypes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "grid", grid);
            ListDocumenttypesOverride(callInfo, grid);
            return callInfo;
        }

        partial void UpdateisFixsumOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string doctypeid, bool value);

        public override System.Web.Mvc.ActionResult UpdateisFixsum(string doctypeid, bool value)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateisFixsum);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "doctypeid", doctypeid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "value", value);
            UpdateisFixsumOverride(callInfo, doctypeid, value);
            return callInfo;
        }

        partial void UpdateisMembershipCostOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string doctypeid, bool value);

        public override System.Web.Mvc.ActionResult UpdateisMembershipCost(string doctypeid, bool value)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateisMembershipCost);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "doctypeid", doctypeid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "value", value);
            UpdateisMembershipCostOverride(callInfo, doctypeid, value);
            return callInfo;
        }

        partial void UpdateisCardCostOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string doctypeid, bool value);

        public override System.Web.Mvc.ActionResult UpdateisCardCost(string doctypeid, bool value)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateisCardCost);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "doctypeid", doctypeid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "value", value);
            UpdateisCardCostOverride(callInfo, doctypeid, value);
            return callInfo;
        }

        partial void UpdateisEnabledOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string doctypeid, bool value);

        public override System.Web.Mvc.ActionResult UpdateisEnabled(string doctypeid, bool value)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateisEnabled);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "doctypeid", doctypeid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "value", value);
            UpdateisEnabledOverride(callInfo, doctypeid, value);
            return callInfo;
        }

        partial void UpdateDocumenttypesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string oper, Tax.Data.Models.AccountingType r, string RelationshipName);

        public override System.Web.Mvc.ActionResult UpdateDocumenttypes(string id, string oper, Tax.Data.Models.AccountingType r, string RelationshipName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDocumenttypes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "oper", oper);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "r", r);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "RelationshipName", RelationshipName);
            UpdateDocumenttypesOverride(callInfo, id, oper, r, RelationshipName);
            return callInfo;
        }

        partial void ListOrganizationParamsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, JQGrid.Helpers.GridSettings grid);

        public override System.Web.Mvc.JsonResult ListOrganizationParams(JQGrid.Helpers.GridSettings grid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListOrganizationParams);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "grid", grid);
            ListOrganizationParamsOverride(callInfo, grid);
            return callInfo;
        }

        partial void UpdateOrganizationsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string oper, Tax.Data.Models.Organization r, string Postcode, string UpperOrganization);

        public override System.Web.Mvc.ActionResult UpdateOrganizations(string id, string oper, Tax.Data.Models.Organization r, string Postcode, string UpperOrganization)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateOrganizations);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "oper", oper);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "r", r);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Postcode", Postcode);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "UpperOrganization", UpperOrganization);
            UpdateOrganizationsOverride(callInfo, id, oper, r, Postcode, UpperOrganization);
            return callInfo;
        }

        partial void ListAddressTypeParamsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, JQGrid.Helpers.GridSettings grid);

        public override System.Web.Mvc.JsonResult ListAddressTypeParams(JQGrid.Helpers.GridSettings grid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListAddressTypeParams);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "grid", grid);
            ListAddressTypeParamsOverride(callInfo, grid);
            return callInfo;
        }

        partial void UpdateAddressTypesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string oper, Tax.Data.Models.AddressType r);

        public override System.Web.Mvc.ActionResult UpdateAddressTypes(string id, string oper, Tax.Data.Models.AddressType r)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateAddressTypes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "oper", oper);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "r", r);
            UpdateAddressTypesOverride(callInfo, id, oper, r);
            return callInfo;
        }

        partial void ListFileTypeParamsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, JQGrid.Helpers.GridSettings grid);

        public override System.Web.Mvc.JsonResult ListFileTypeParams(JQGrid.Helpers.GridSettings grid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListFileTypeParams);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "grid", grid);
            ListFileTypeParamsOverride(callInfo, grid);
            return callInfo;
        }

        partial void UpdateFileTypesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string oper, Tax.Data.Models.FileType r);

        public override System.Web.Mvc.ActionResult UpdateFileTypes(string id, string oper, Tax.Data.Models.FileType r)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateFileTypes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "oper", oper);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "r", r);
            UpdateFileTypesOverride(callInfo, id, oper, r);
            return callInfo;
        }

        partial void ListPensionTypeParamsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, JQGrid.Helpers.GridSettings grid);

        public override System.Web.Mvc.JsonResult ListPensionTypeParams(JQGrid.Helpers.GridSettings grid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListPensionTypeParams);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "grid", grid);
            ListPensionTypeParamsOverride(callInfo, grid);
            return callInfo;
        }

        partial void UpdatePensionTypesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string oper, Tax.Data.Models.PensionType r);

        public override System.Web.Mvc.ActionResult UpdatePensionTypes(string id, string oper, Tax.Data.Models.PensionType r)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdatePensionTypes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "oper", oper);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "r", r);
            UpdatePensionTypesOverride(callInfo, id, oper, r);
            return callInfo;
        }

        partial void ListNewsParamsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, JQGrid.Helpers.GridSettings grid);

        public override System.Web.Mvc.JsonResult ListNewsParams(JQGrid.Helpers.GridSettings grid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ListNewsParams);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "grid", grid);
            ListNewsParamsOverride(callInfo, grid);
            return callInfo;
        }

        partial void UpdateNewsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string oper, Tax.Data.Models.News r, string NewsTypeName);

        public override System.Web.Mvc.ActionResult UpdateNews(string id, string oper, Tax.Data.Models.News r, string NewsTypeName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNews);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "oper", oper);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "r", r);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "NewsTypeName", NewsTypeName);
            UpdateNewsOverride(callInfo, id, oper, r, NewsTypeName);
            return callInfo;
        }

        partial void GetUserPictIdOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, System.Guid suserId);

        public override System.Web.Mvc.JsonResult GetUserPictId(System.Guid suserId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetUserPictId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "suserId", suserId);
            GetUserPictIdOverride(callInfo, suserId);
            return callInfo;
        }

        partial void NewOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        public override System.Web.Mvc.ActionResult New()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.New);
            NewOverride(callInfo);
            return callInfo;
        }

        partial void ListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        public override System.Web.Mvc.ActionResult List()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.List);
            ListOverride(callInfo);
            return callInfo;
        }

        partial void ListSinoszUsersForListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, JQGrid.Helpers.GridSettings grid, string Output);

        public override System.Web.Mvc.ActionResult ListSinoszUsersForList(JQGrid.Helpers.GridSettings grid, string Output)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ListSinoszUsersForList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "grid", grid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Output", Output);
            ListSinoszUsersForListOverride(callInfo, grid, Output);
            return callInfo;
        }

        partial void ListAccountingDocumentsForListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, JQGrid.Helpers.GridSettings grid, string Output);

        public override System.Web.Mvc.ActionResult ListAccountingDocumentsForList(JQGrid.Helpers.GridSettings grid, string Output)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ListAccountingDocumentsForList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "grid", grid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Output", Output);
            ListAccountingDocumentsForListOverride(callInfo, grid, Output);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
